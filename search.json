[{"path":"/TODO.html","id":null,"dir":"","previous_headings":"","what":"GIFT","title":"GIFT","text":"list","code":""},{"path":"/TODO.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"GIFT","text":"Functions Vignette Database","code":""},{"path":"/TODO.html","id":"id_1-functions","dir":"","previous_headings":"","what":"1. Functions","title":"GIFT","text":"Final check 1. Checklists       1.1. GIFT_checklist_raw()      1.2. GIFT_checklist_conditional()      1.3. GIFT_spatial()      1.4. GIFT_taxonomy()      1.5. GIFT_taxgroup()      1.6. GIFT_no_overlap()      1.7. GIFT_checklist() Trait functions       2.1. GIFT_traits_meta()      2.2. GIFT_traits()      2.3. GIFT_traits_raw() Environment      3.1. GIFT_env()      3.2. GIFT_env_meta_misc()      3.3. GIFT_env_meta_raster() Species distribution      4.1. GIFT_species()      4.2. GIFT_ranges() Plotting functions      5.1. GIFT_shape()      5.2. GIFT_plot() Miscellaneous      6.1. med()      6.2. GIFT_references()      6.3. GIFT_geology()? generic queries? update GIFT_admin","code":""},{"path":"/TODO.html","id":"id_0-general","dir":"","previous_headings":"","what":"0. General","title":"GIFT","text":"api forwarded!!!~~","code":"- ~~all calls of GIFT functions inside of other functions need the version"},{"path":"/TODO.html","id":"id_1-details","dir":"","previous_headings":"","what":"1. Details","title":"GIFT","text":"1.1. GIFT_checklists_raw() 1.2. GIFT_checklists_conditional() leveling-(complete fern seed plant lists => complete Tracheophyta list): count unique genera available groups compare unique genera included desired group 1.3. GIFT_spatial() 1.4. GIFT_taxonomy() 1.5. GIFT_tax_group() 1.6. GIFT_no_overlap() Check: happens regions exist don’t spatial data? kept removed Failed parse example topic ‘GIFT_no_overlap’ 1.7. GIFT_checklist() 2.1. GIFT_traits_meta() 2.2. GIFT_traits() make numeric traits numeric? Give back trait IDs valid? 2.3. GIFT_traits_raw() write help trait values character values (even numbers) make orig_names/names matched info optional? Add three new matching columns Give back trait IDs valid? 3.1. GIFT_env() remove rows NA variables 3.2. GIFT_env_meta_misc() 3.3. GIFT_env_meta_raster() 4.1. GIFT_species() 4.2. GIFT_ranges() translate range_finder? 5.1. GIFT_shape() give back warning entity_IDs polygons? Put old polygons old versions respective folders 6.1. med() 6.2. GIFT_references() GIFT_species_lookup() get rid orig ID faster? Make simple version least. (Patrick) GIFT_species_distribution() use simpler version GIFT_species() matchednames (Patrick) something wrong aggregated = TRUE matchednames TRUE, Columns missing GIFT_regions() GIFT_overlap() GIFT_no_overlap() versions GIFT: restore old polygons versions < 2.2 (Patrick)","code":""},{"path":"/TODO.html","id":"id_12-controls","dir":"","previous_headings":"","what":"1.2. Controls","title":"GIFT","text":"Make clear error message case wrong API (clear error message version)","code":""},{"path":[]},{"path":"/TODO.html","id":"id_4-queries","dir":"","previous_headings":"","what":"4. Queries","title":"GIFT","text":"queries.php (WinSCP) => put comment R function queries used","code":""},{"path":"/TODO.html","id":"id_5-gift-admindatabase","dir":"","previous_headings":"","what":"5. GIFT admin/database","title":"GIFT","text":"Traits: aggregation categorical traits (agreement revise (ex. shrub herb/shrub NA far)) Traits: continuous traits: add column coeff. var (sd/mean) traits_final Traits: Agreement free text traits? make sense. handled=> remove empty values free text traits Phylogeny: V.Phylo.maker2 => update phylogeny table exactextract unrealistic heights elevation ranges (+ flora Gabon feet) missing trait values traits_final (see 4.11.1 example) Ref_ID 10173 hat native == 1 und naturalized == 1 ohne das questionable oder quest_native angezeigt ist Heights Helena sent check whats restricted Add bit info version table: beta, tpl-wcvp, numbers Trait links Matthias Check type_ref = 0 4.15.1 combinations possible New NDVI Check regions multiple polygon resources add environmental layers GIFT: Check Julians Polygons Run counts cleanup_names_work_unique() https://developers.google.com/earth-engine/datasets/catalog/NASA_MEASURES_GFCC_TC_v3 https://glad.umd.edu/dataset/gedi https://www.hydrosheds.org/products/gloric https://www.worldwildlife.org/pages/global-lakes--wetlands-database","code":""},{"path":"/TODO.html","id":"id_6-extra-stuff","dir":"","previous_headings":"","what":"6. Extra-stuff","title":"GIFT","text":"tell bRacatus people use R package API? allow comparison restricted/extended (GIFT_references() _richness(), _lists()) GIFT website: link package; Alumni, update, Pierre, Julian, etc.","code":""},{"path":[]},{"path":"/articles/GIFT.html","id":"shapefile","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.1. Shapefile","title":"GIFT tutorial","text":"Let’s assume interested floristic knowledge western part Mediterranean basin. purpose, can simply use shapefile region interest feed GIFT_checklist() function. provide shapefile region GIFT R package, can access using data(\"med\") command.  Please note shapes used GIFT unprojected (Geographic Coordinate  System WGS84), shapefiles provided CRS. can check coordinate reference system sf object using sf::st_crs().","code":"data(\"med\")  world <- ne_coastline(returnclass = \"sf\")  eckertIV <-   \"+proj=eck4 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\"  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = med, fill = \"darkblue\", color = \"black\", alpha = 0.5,           size = 1) +   labs(title = \"Western Mediterranean basin\") +   lims(x = c(-20, 20), y = c(24, 48)) +   theme_void()"},{"path":"/articles/GIFT.html","id":"main-arguments","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.2. Main arguments","title":"GIFT tutorial","text":"Now shape region interest, let’s call GIFT_checklist(). wrapper function many arguments detail subsection.  First, taxonomic group interest. can interested particular group plants, example Angiosperms. case, set taxon_name argument like taxon_name = \"Angiospermae\". interested particular plant family, let’s say orchids, taxon_name = \"Orchidaceae\".  see options taxon_name argument, can run GIFT_taxonomy() function look taxon_name column output.  Together first argument comes complete_taxon. argument, set default TRUE defines whether regions represented checklists GIFT completely covering taxon interest retrieved. Figure 1 explaining principle. Figure 1. Complete taxon Figure 1, want retrieve checklists Angiosperms. first region available, region one checklist interest. checklist always retrieved. region B, checklist orchids, subset Angiosperms. complete_taxon set TRUE, checklist won’t retrieved, otherwise yes. Finally, region C, checklist vascular plants one orchids. cases, checklist vascular plants retrieved filtering non-angiosperm species. species Orchids also retrieved cases one available can complete floristic knowledge Angiosperms region.  Following arguments GIFT_checklist() relate floristic statuses plant species. can example interested endemic species, naturalized species. Default value retrieving native species.  Similarly, two arguments needed function. First, floristic_group defines group interest. Second, complete_floristic states whether incomplete regions regarding floristic group chosen retrieved . logic detailed Figure 2 similar complete_taxon argument shown . Figure 2. Complete floristic  next set arguments relate spatial matching desired area GIFT database. main argument regard, providing shapefile set coordinates, overlap argument. argument can get 4 options, options leading different outcome explained Figure 3. Figure 3. GIFT spatial  Figure3, GIFT polygons represented orange either intersect, fall inside outside provided shape file. overlap argument GIFT polygon illustrates situation given GIFT polygon retrieved .  Another important spatial feature provide possibility remove overlapping polygons. Indeed, many regions world, several polygons GIFT database cover . Since may want overlapping polygons. care overlapping polygons, can simply set remove_overlap FALSE. Figure 4. overlap  case want one polygon per region, remove_overlap can set TRUE. case, GIFT_checklist() either retrieve smaller larger polygon. depend values set argument area_th_mainland detailed Figure 4. argument takes value \\(km^2\\). smaller polygon exceeds threshold, retrieved (right column Figure 4). case area smaller polygon threshold, larger overlapping polygon retrieved (middle column Figure 4). similar argument islands, area_th_island, default set 0 \\(km^2\\). way, default, smaller islands always retrieved.  Please also note polygons considered overlapping exceed certain percentage overlap. percentage can modified using overlap_th argument (Figure 5). argument set default 10%. Figure 5. Overlap threshold","code":""},{"path":"/articles/GIFT.html","id":"gift_checklist","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.3. GIFT_checklist()","title":"GIFT tutorial","text":"Now covered main arguments GIFT_checklist(), can retrieve plant checklists Mediterranean region. GIFT_checklist() returns list two elements. First metadata checklists fulfilling different criteria. second element data.frame checklists species composition per checklist.  want retrieve metadata, can set argument list_set_only TRUE.  can now estimation number checklists native Angiosperm species western part Mediterranean basin, well number species. can now apply different values arguments detailed . stricter criteria, can see number checklists retrieved decreases. example, removing overlapping regions: Please note function works shape file can accept set coordinates. example illustrates case want retrieve GIFT checklists intersecting coordinates Göttingen.  cite properly references retrieved, can run function GIFT_references() look column ref_long``. column alsogeo_entity_ref` associates reference name.","code":"ex_meta <- GIFT_checklist(taxon_name = \"Angiospermae\",                           shp = med, overlap = \"centroid_inside\",                           list_set_only = TRUE) medit <- GIFT_checklist(taxon_name = \"Angiospermae\",                         complete_taxon = TRUE,                         floristic_group = \"native\",                         complete_floristic = TRUE,                         geo_type = \"All\",                         shp = med, overlap = \"centroid_inside\",                          remove_overlap = FALSE,                         taxonomic_group = TRUE) # this argument adds two ## ================================================================================ # columns to the checklist: plant family and taxonomic group of each species # Number of references covered length(unique(medit[[2]]$ref_ID)) ## [1] 23 # Number of checklists covered (one reference can have several lists inside) length(unique(medit[[2]]$list_ID)) ## [1] 115 # Number of species length(unique(medit[[2]]$work_species)) ## [1] 12840 medit_no_overlap <- GIFT_checklist(shp = med, overlap = \"centroid_inside\",                                    taxon_name = \"Angiospermae\",                                    remove_overlap = TRUE) ## ================================================================================ # Number of references covered length(unique(medit[[2]]$ref_ID)) ## [1] 23 length(unique(medit_no_overlap[[2]]$ref_ID)) ## [1] 22 custom_point <- cbind(9.9, 51) # coordinates of Göttingen  got <- GIFT_checklist(coordinates = custom_point,                       overlap = \"extent_intersect\",                       taxon_name = \"Angiospermae\",                       remove_overlap = TRUE,                       list_set_only = TRUE)  kable(got[[1]], \"html\") %>%   kable_styling(full_width = FALSE)"},{"path":"/articles/GIFT.html","id":"species-richness-map","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.4. Species richness map","title":"GIFT tutorial","text":"downloaded set checklists, possible map species richness taxonomic group interest. purpose, use combination two functions: GIFT_richness() either retrieves species richness trait coverage per polygon GIFT_shape() retrieves shapefile list GIFT polygons.  next two chunks illustrate Angiosperms World Western part Mediterranean basin.","code":"gift_shape <- GIFT_shape() # retrieves all shapefiles by default ## ================================================================================ angio_rich <- GIFT_richness(what = \"species_richness\",                             taxon_name = \"Angiospermae\")  rich_map <- dplyr::left_join(gift_shape, angio_rich, by = \"entity_ID\") %>%   dplyr::filter(stats::complete.cases(total))  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = rich_map, aes(fill = total + 1)) +   scale_fill_viridis_c(\"Species number\\n(log-transformed)\", trans = \"log\",                        labels = scales::number_format(accuracy = 1)) +   labs(title = \"Angiosperms\", subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void() med_shape <- gift_shape[which(gift_shape$entity_ID %in%                                  unique(medit[[2]]$entity_ID)), ]  med_rich <- angio_rich[which(angio_rich$entity_ID %in%                                 unique(medit[[2]]$entity_ID)), ]  med_map <- dplyr::left_join(med_shape, med_rich, by = \"entity_ID\") %>%   dplyr::filter(stats::complete.cases(total))  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = med, fill = \"darkblue\", color = \"black\", alpha = 0.1,           size = 1) +   geom_sf(data = med_map, aes(fill = total)) +   scale_fill_viridis_c(\"Species number\") +   labs(title = \"Angiosperms in the Western Mediterranean basin\") +   lims(x = c(-20, 20), y = c(24, 48)) +   theme_void()"},{"path":"/articles/GIFT.html","id":"distribution-of-species","dir":"Articles","previous_headings":"","what":"2. Distribution of species","title":"GIFT tutorial","text":"GIFT R package also allows retrieving spatial distribution focal plant species.","code":""},{"path":"/articles/GIFT.html","id":"available-species","dir":"Articles","previous_headings":"2. Distribution of species","what":"2.1. Available species","title":"GIFT tutorial","text":"know plantspecies available, can first run function GIFT_species(). 364573 species currently available database. number may increase new releases database.","code":"all_sp <- GIFT_species()"},{"path":"/articles/GIFT.html","id":"species-names-and-taxonomic-harmonization","dir":"Articles","previous_headings":"2. Distribution of species","what":"2.2. Species names and taxonomic harmonization","title":"GIFT tutorial","text":"Since GIFT collection checklists authors use taxonomic knowledge describe species, step taxonomic harmonization including checklists database. frequent backbone used World Checklists Vascular Plants (WCVP).  original harmonized names stored database can use function GIFT_species_lookup() look differences particular species. example, wood anemone Anemone nemorosa. Looking output table, can see original species names identification numbers (name_ID) taxonomic harmonization. species’ names IDs taxonmic harmonization last columns right starting prefix work_.","code":"anemone_lookup <- GIFT_species_lookup(genus = \"Anemone\", epithet = \"nemorosa\")  kable(anemone_lookup, \"html\") %>%   kable_styling(full_width = FALSE)"},{"path":"/articles/GIFT.html","id":"species-distribution","dir":"Articles","previous_headings":"2. Distribution of species","what":"2.3. Species distribution","title":"GIFT tutorial","text":"Now focal species harmonized name, can retrieve distribution using GIFT_species_distribution().  Please note set aggregation argument TRUE order one floristic status per polygon. details, check help page function. species listed endemic GIFT polygons. Let’s now check places listed native naturalized. Looking different combinations statuses, can distinguish several situations: 13 polygons, status available. species listed native non-naturalized (naturalized status missing) 113+17=130 polygons. naturalized non native 5 polygons.  surprising cases species non-native non-naturalized, happens 3+2=5 polygons. specific combination can happen unstable cases species process naturalized. Now know polygons species occur status, can map distribution using GIFT shapes retrieved earlier using GIFT_shape().","code":"anemone_distr <- GIFT_species_distribution(   genus = \"Anemone\", epithet = \"nemorosa\", aggregation = TRUE)  anemone_statuses <- anemone_distr %>%   mutate(native = ifelse(native == 1, \"native\", \"non-native\"),          naturalized = ifelse(naturalized == 1, \"naturalized\",                               \"non-naturalized\"),          endemic_list = ifelse(endemic_list == 1, \"endemic_list\",                                \"non-endemic_list\")) %>%   dplyr::select(entity_ID, native, naturalized, endemic_list)  table(anemone_statuses$endemic_list) ##  ## non-endemic_list  ##               53 table(paste(anemone_statuses$native, anemone_statuses$naturalized,             sep = \"_\")) ##  ##                      NA_NA                  native_NA  ##                         13                         17  ##     native_non-naturalized              non-native_NA  ##                        113                          3  ##     non-native_naturalized non-native_non-naturalized  ##                          5                          2 # We rename the statuses based on the distinct combinations anemone_statuses <- anemone_statuses %>%   mutate(Status = case_when(     native == \"native\" & naturalized == \"non-naturalized\" ~ \"native\",     native == \"native\" & is.na(naturalized) ~ \"native\",     native == \"non-native\" & is.na(naturalized) ~ \"non-native\",     native == \"non-native\" & naturalized == \"naturalized\" ~ \"naturalized\",     native == \"non-native\" & naturalized == \"non-naturalized\" ~ \"non-native\",     is.na(native) & is.na(naturalized) ~ \"unknown\"   ))  # Merge with the shapes anemone_shape <- gift_shape[which(gift_shape$entity_ID %in%                                      unique(anemone_distr$entity_ID)), ] anemone_map <- dplyr::left_join(anemone_shape, anemone_statuses,                                 by = \"entity_ID\")  # Area of distribution with floristic status ggplot(world) +   geom_sf(color = \"gray70\") +   geom_sf(data = anemone_map, color = \"black\", aes(fill = as.factor(Status))) +   scale_fill_brewer(\"Status\", palette = \"Set2\") +   labs(title = expression(paste(\"Distribution map of \",                                 italic(\"Anemone nemorosa\"))),        subtitle = \"Unprojected (GCS: WGS84)\") +   lims(x = c(-65, 170), y = c(-45, 70)) +   theme_void()"},{"path":"/articles/GIFT.html","id":"trait-data","dir":"Articles","previous_headings":"","what":"3. Trait data","title":"GIFT tutorial","text":"Trait information species level also made available GIFT R package.","code":""},{"path":"/articles/GIFT.html","id":"metadata","dir":"Articles","previous_headings":"3. Trait data","what":"3.1. Metadata","title":"GIFT tutorial","text":"many functional traits available GIFT. traits identification number called trait_ID. two functions retrieving trait values, GIFT_traits() GIFT_traits_raw(), rely IDs, first step run function GIFT_traits_meta() know ID wanted trait.  example, let’s say want retrieve maximal vegetative heights plant species. can see ID trait 1.6.2. Now ID, can retrieve growth form values different plant species using GIFT_traits().","code":"trait_meta <- GIFT_traits_meta() trait_meta[which(trait_meta$Trait2 == \"Plant_height_max\"), ] ##    Lvl1   Category Lvl2       Trait1  Lvl3           Trait2 Units    type ## 12    1 Morphology  1.6 Plant height 1.6.2 Plant_height_max     m numeric ##    comment count ## 12    <NA> 71258"},{"path":"/articles/GIFT.html","id":"trait-values","dir":"Articles","previous_headings":"3. Trait data","what":"3.2. Trait values","title":"GIFT tutorial","text":"two functions access trait values. First, GIFT_traits_raw() gives trait values given species given trait. trait values can vary.  Second, GIFT_traits() returns aggregated trait value species level. aggregation simply takes mean continuous traits frequent entry categorical traits. However, specific cases, aggregation takes either minimum maximum, like trait chose.  Let’s retrieve raw aggregated values maximal vegetative height plants (trait_ID 1.6.2). Three maximal heights Fagus sylvatica available, 30, 35 50 meters, led aggregated value 50 meters.","code":"height <- GIFT_traits(trait_IDs = c(\"1.6.2\"), agreement = 0.66,                       bias_ref = FALSE, bias_deriv = FALSE) ## ================================================================================ height_raw <- GIFT_traits_raw(trait_IDs = c(\"1.6.2\")) ## ================================================================================ # Raw values as.numeric(height_raw[which(height_raw$work_species == \"Fagus sylvatica\"),                       \"trait_value\"]) ## [1] 35 30 50 # Aggregated value as.numeric(height[which(height$work_species == \"Fagus sylvatica\"),                   \"trait_value_1.6.2\"]) ## [1] 50"},{"path":"/articles/GIFT.html","id":"trait-coverage","dir":"Articles","previous_headings":"3. Trait data","what":"3.3. Trait coverage","title":"GIFT tutorial","text":"can also retrieve trait coverage information polygons, using function species richness GIFT_richness().  combination shapes loaded previously, can also map trait coverage.","code":"angio_height <- GIFT_richness(what = \"trait_coverage\",                               taxon_name = \"Angiospermae\",                               trait_ID = \"1.6.2\")  angio_height_shape <- gift_shape[which(gift_shape$entity_ID %in%                                           unique(angio_height$entity_ID)), ]  angio_height_map <- dplyr::left_join(   angio_height_shape, angio_height, by = \"entity_ID\")  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = angio_height_map[complete.cases(angio_height_map$native), ],           aes(fill = native)) +   scale_fill_viridis_c(\"Coverage (%)\") +   labs(title = \"Coverage for maximal vegetative height of Angiosperms\",        subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void()"},{"path":"/articles/GIFT.html","id":"environmental-variables","dir":"Articles","previous_headings":"","what":"4. Environmental variables","title":"GIFT tutorial","text":"Finally, set summary statistics many environmental variables can retrieved GIFT polygon.","code":""},{"path":"/articles/GIFT.html","id":"metadata-1","dir":"Articles","previous_headings":"4. Environmental variables","what":"4.1. Metadata","title":"GIFT tutorial","text":"illustrate retrieve environmental variables, summarized polygon level, subset polygons.  retrieve environmental variables polygons falling western Mediterranean basin, retrieved section 1.  know variables available, can run two metadata functions: GIFT_env_meta_misc() GIFT_env_meta_raster(). respectively give access list miscellaneous variables raster layers available GIFT database.  references cite using environmental variables also available functions (column ref_long outputs).","code":"misc_env <- GIFT_env_meta_misc() raster_env <- GIFT_env_meta_raster()"},{"path":"/articles/GIFT.html","id":"environmental-values","dir":"Articles","previous_headings":"4. Environmental variables","what":"4.2. Environmental values","title":"GIFT tutorial","text":"Now, let’s say want retrieve perimeter biome polygon well elevation mean temperature. two raster layers, need define summary statistics, polygons usually bigger raster resolution.  many summary statistics available, can check help page GIFT_env() see . Let’s call mean median elevation maximal value average temperature.","code":"med_env <- GIFT_env(entity_ID = unique(medit[[2]]$entity_ID),                     miscellaneous = c(\"perimeter\", \"biome\"),                     rasterlayer = c(\"mn30_grd\", \"wc2.0_bio_30s_01\"),                     sumstat = list(c(\"mean\", \"med\"), \"max\"))  med_env[1, ] ##     entity_ID geo_entity perimeter                                    biome ## 145       145  El Hierro    126.09 Mediterranean Forests, Woodlands & Scrub ##     mean_mn30_grd med_mn30_grd max_wc2.0_bio_30s_01 ## 145      579.3101          537              21.5625"},{"path":"/articles/GIFT.html","id":"map","dir":"Articles","previous_headings":"4. Environmental variables","what":"4.3. Map","title":"GIFT tutorial","text":"Using shapes previously loaded, can also map particular environmental variable GIFT polygons.","code":"world_temp <- GIFT_env(entity_ID = unique(angio_rich$entity_ID),                        rasterlayer = c(\"wc2.0_bio_30s_01\"),                        sumstat = c(\"mean\"))  temp_shape <- gift_shape[which(gift_shape$entity_ID %in%                                   unique(angio_rich$entity_ID)), ]  temp_map <- dplyr::left_join(temp_shape, world_temp, by = \"entity_ID\")  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = temp_map, aes(fill = mean_wc2.0_bio_30s_01)) +   scale_fill_viridis_c(\"Celsius degrees\") +   labs(title = \"Average temperature\",        subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void()"},{"path":"/articles/GIFT.html","id":"references","dir":"Articles","previous_headings":"","what":"5. References","title":"GIFT tutorial","text":"using GIFT database GIFT R package, two resources cite: Weigelt, P., König, C., & Kreft, H. (2020). GIFT – Global Inventory Floras Traits macroecology biogeography. Journal Biogeography, 47(1), 16–43. GIFT R package","code":""},{"path":"/articles/GIFT_advanced_users.html","id":"versions-and-metadata-for-checklists","dir":"Articles","previous_headings":"","what":"1. Versions and metadata for checklists","title":"GIFT tutorial for advanced users","text":"functions package, version argument. argument allows retrieving different instances GIFT database therefore make previous studies using GIFT database reproducible. example, version used Weigelt et al. (2021) \"1.0\". get information content different versions, can go click tab Version Log. access available versions database, can run following function: column version table one use want retrieve past versions GIFT database. default, argument used GIFT_version = \"latest\" leads current latest stable version database (“2.0” October 2022). function GIFT_lists() can run retrieve metadata GIFT checklists. next chunk, call different values GIFT_version argument. number checklists available 3122 version 1.0 equals 4475 version 2.0.","code":"versions <- GIFT_version() kable(versions, \"html\") %>%   kable_styling(full_width = FALSE) list_latest <- GIFT_lists(GIFT_version = \"latest\") # default value list_1 <- GIFT_lists(GIFT_version = \"1.0\")"},{"path":"/articles/GIFT_advanced_users.html","id":"references","dir":"Articles","previous_headings":"","what":"2. References","title":"GIFT tutorial for advanced users","text":"using GIFT database research article, good practice cite references used, list Appendix. following function retrieves reference checklist, well metadata. References documented column ref_long.","code":"ref <- GIFT_references()  # 3 first rows of that table kable(ref[1:3, c(\"ref_ID\", \"ref_long\", \"geo_entity_ref\")], \"html\") %>%   kable_styling(full_width = FALSE)"},{"path":"/articles/GIFT_advanced_users.html","id":"checklist-data","dir":"Articles","previous_headings":"","what":"3. Checklist data","title":"GIFT tutorial for advanced users","text":"main wrapper function retrieve checklists species composition GIFT_checklist() also possibility retrieve individual checklists using GIFT_checklist_raw(). need know identification number list_ID checklists want retrieve.  quickly see list_ID available database, can run: calling GIFT_checklist_raw(), can set argument namesmatched TRUE order get extra columns informing taxonomic harmonization performed uploading list GIFT database. list called, can see “lost” species taxonomic harmonization went 1331 source 1106 taxonomic harmonization. means several species considered synonyms unknown plant species taxonomic backbone used harmonization. Note: service mainly used taxonomically harmonize species’ names Plant List version 2.0 World checklist Vascular Plants afterwards.","code":"gift_lists <- GIFT_lists() length(unique(gift_lists$list_ID)) ## [1] 4475 listID_1 <- GIFT_checklist_raw(list_ID = c(11926)) listID_1_tax <- GIFT_checklist_raw(list_ID = c(11926), namesmatched = TRUE) ncol(listID_1); ncol(listID_1_tax) ## [1] 16 ## [1] 33 length(unique(listID_1$work_ID)); length(unique(listID_1_tax$orig_ID)) ## [1] 1106 ## [1] 1331"},{"path":"/articles/GIFT_advanced_users.html","id":"spatial-subset","dir":"Articles","previous_headings":"","what":"4. Spatial subset","title":"GIFT tutorial for advanced users","text":"main vignette, illustrated retrieve checklists falling provided shapefile, using western Mediterranean basin provided GIFT R package. provide details different values overlap argument can take, using function GIFT_spatial(). following figure illustrates argument works: Figure 1. GIFT spatial  now illustrate retrieving checklists falling western Mediterranean basin using four options available. see progressively lose lists apply selective criterion spatial overlap. restrictive option overlap = \"shape_inside\" less restrictive one overlap = \"extent_intersect\".  Using functions GIFT_shape() calling entity_IDs retrieved instance, can download shapefiles region. make map.","code":"data(med) med_centroid_inside  <- GIFT_spatial(shp = med, overlap = \"centroid_inside\") med_extent_intersect <- GIFT_spatial(shp = med, overlap = \"extent_intersect\") med_shape_intersect <- GIFT_spatial(shp = med, overlap = \"shape_intersect\") med_shape_inside <- GIFT_spatial(shp = med, overlap = \"shape_inside\")  length(unique(med_extent_intersect$entity_ID)) ## [1] 108 length(unique(med_shape_intersect$entity_ID)) ## [1] 104 length(unique(med_centroid_inside$entity_ID)) ## [1] 84 length(unique(med_shape_inside$entity_ID)) ## [1] 72 geodata_extent_intersect <- GIFT_shape(med_extent_intersect$entity_ID)  geodata_shape_inside <-   geodata_extent_intersect[which(geodata_extent_intersect$entity_ID %in%                                    med_shape_inside$entity_ID), ] geodata_centroid_inside <-   geodata_extent_intersect[which(geodata_extent_intersect$entity_ID %in%                                    med_centroid_inside$entity_ID), ] geodata_shape_intersect <-   geodata_extent_intersect[which(geodata_extent_intersect$entity_ID %in%                                    med_shape_intersect$entity_ID), ] par(mfrow = c(2, 2), mai = c(0, 0, 0.5, 0)) plot(sf::st_geometry(geodata_shape_inside),      col = geodata_shape_inside$entity_ID,      main = paste(\"shape inside\\n\",                   length(unique(med_shape_inside$entity_ID)),                   \"polygons\")) plot(sf::st_geometry(med), lwd = 2, add = TRUE)  plot(sf::st_geometry(geodata_centroid_inside),      col = geodata_centroid_inside$entity_ID,      main = paste(\"centroid inside\\n\",                   length(unique(med_centroid_inside$entity_ID)),                   \"polygons\")) points(geodata_centroid_inside$point_x, geodata_centroid_inside$point_y) plot(sf::st_geometry(med), lwd = 2, add = TRUE)  plot(sf::st_geometry(geodata_shape_intersect),      col = geodata_shape_intersect$entity_ID,      main = paste(\"shape intersect\\n\",                   length(unique(med_shape_intersect$entity_ID)),                   \"polygons\")) plot(sf::st_geometry(med), lwd = 2, add = TRUE)  plot(sf::st_geometry(geodata_extent_intersect),      col = geodata_extent_intersect$entity_ID,      main = paste(\"extent intersect\\n\",                   length(unique(med_extent_intersect$entity_ID)),                   \"polygons\")) plot(sf::st_geometry(med), lwd = 2, add = TRUE)"},{"path":"/articles/GIFT_advanced_users.html","id":"remove-overlapping-regions","dir":"Articles","previous_headings":"","what":"5. Remove overlapping regions","title":"GIFT tutorial for advanced users","text":"GIFT comprises many polygons regions, several polygons overlapping. remove overlapping polygons associated parameters two things detailed main vignette. provide details:","code":"length(med_shape_inside$entity_ID) ## [1] 72 length(GIFT_no_overlap(med_shape_inside$entity_ID, area_th_island = 0,                        area_th_mainland = 100, overlap_th = 0.1)) ## [1] 53 # The following polygons are overlapping: GIFT_no_overlap(med_shape_inside$entity_ID, area_th_island = 0,                 area_th_mainland = 100, overlap_th = 0.1) ##  [1] \"145\"   \"146\"   \"147\"   \"148\"   \"149\"   \"150\"   \"151\"   \"414\"   \"415\"   ## [10] \"416\"   \"417\"   \"547\"   \"548\"   \"549\"   \"550\"   \"551\"   \"552\"   \"586\"   ## [19] \"591\"   \"592\"   \"736\"   \"738\"   \"739\"   \"10001\" \"10072\" \"10104\" \"10184\" ## [28] \"10303\" \"10422\" \"10430\" \"10978\" \"11029\" \"11030\" \"11031\" \"11033\" \"11035\" ## [37] \"11038\" \"11039\" \"11042\" \"11044\" \"11045\" \"11046\" \"11434\" \"11474\" \"11477\" ## [46] \"11503\" \"12231\" \"12232\" \"12233\" \"12632\" \"12633\" \"12634\" \"12635\" # Example of two overlapping polygons: Spain mainland and Andalusia overlap_shape <- GIFT_shape(entity_ID = c(10071, 12078)) ## ================================================================================ par(mfrow = c(1, 1)) plot(sf::st_geometry(overlap_shape),      col = c(rgb(red = 1, green = 0, blue = 0, alpha = 0.5),              rgb(red = 0, green = 0, blue = 1, alpha = 0.3)),      lwd = c(2, 1),      main = \"Overlapping polygons\") GIFT_no_overlap(c(10071, 12078), area_th_island = 0, area_th_mainland = 100,                 overlap_th = 0.1) ## [1] 12078 GIFT_no_overlap(c(10071, 12078), area_th_island = 0, area_th_mainland = 100000,                 overlap_th = 0.1) ## [1] 10071"},{"path":"/articles/GIFT_advanced_users.html","id":"species","dir":"Articles","previous_headings":"","what":"6. Species","title":"GIFT tutorial for advanced users","text":"plant species present GIFT database can retrieved using GIFT_species(). add additional information, like order family, can call GIFT_taxgroup().  said , plant species names can vary original sources come final work_species name get, due taxonomic harmonization procedure. Looking-species different steps taxonomic harmonization possible function GIFT_species_lookup().","code":"species <- GIFT_species() # Add Family species$Family <- GIFT_taxgroup(   as.numeric(species$work_ID), taxon_lvl = \"family\", return_ID = FALSE,    species = species)  kable(species[1:5, ], \"html\") %>%   kable_styling(full_width = FALSE) GIFT_taxgroup(as.numeric(species$work_ID[1:5]), taxon_lvl = \"order\",               return_ID = FALSE) ## [1] \"Asterales\"    \"Polypodiales\" \"Fabales\"      \"Fabales\"      \"Fabales\" GIFT_taxgroup(as.numeric(species$work_ID[1:5]),               taxon_lvl = \"higher_lvl\", return_ID = FALSE,               species = species) ## [1] \"Angiospermae\" \"Monilophyta\"  \"Angiospermae\" \"Angiospermae\" \"Angiospermae\" Fagus <- GIFT_species_lookup(genus = \"Fagus\", epithet = \"sylvatica\",                              namesmatched = TRUE)  kable(Fagus[1:5, ], \"html\") %>%   kable_styling(full_width = FALSE)"},{"path":"/articles/GIFT_advanced_users.html","id":"taxonomy","dir":"Articles","previous_headings":"","what":"7. Taxonomy","title":"GIFT tutorial for advanced users","text":"taxonomy used GIFT database can downloaded using GIFT_taxonomy().","code":"taxo <- GIFT_taxonomy()  kable(taxo[1:20, ], \"html\") %>%   kable_styling(full_width = FALSE)"},{"path":"/articles/GIFT_advanced_users.html","id":"overlap_glonaf-tables-and-others","dir":"Articles","previous_headings":"","what":"8. Overlap_GloNAF tables (and others)","title":"GIFT tutorial for advanced users","text":"global databases plant diversity exist may rely different polygons, provide function GIFT_overlap() can look spatial overlap GIFT polygons polygons coming databases.  far, two resources available: glonaf gmba. glonaf stands Global Naturalized Alien Flora gmba Global Mountain Biodiversity Assessment. GIFT_overlap() retunrs spatial overlap percentage pairwise combination polygons GIFT resource.","code":"glonaf <- GIFT_overlap(resource = \"glonaf\")  kable(glonaf[1:5, ], \"html\") %>%   kable_styling(full_width = FALSE) gmba <- GIFT_overlap(resource = \"gmba\")  kable(gmba[1:5, ], \"html\") %>%   kable_styling(full_width = FALSE)"},{"path":"/articles/GIFT_advanced_users.html","id":"references-1","dir":"Articles","previous_headings":"","what":"References","title":"GIFT tutorial for advanced users","text":"Weigelt, P., König, C., & Kreft, H. (2020). GIFT – Global Inventory Floras Traits macroecology biogeography. Journal Biogeography, 47(1), 16–43.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrick Weigelt. Author, maintainer. Pierre Denelle. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Weigelt P, Denelle P (2022). GIFT: Access Global Inventory Floras Traits (GIFT). https://github.com/BioGeoMacro/GIFT, https://biogeomacro.github.io/GIFT/.","code":"@Manual{,   title = {GIFT: Access to the Global Inventory of Floras and Traits (GIFT)},   author = {Patrick Weigelt and Pierre Denelle},   year = {2022},   note = {https://github.com/BioGeoMacro/GIFT, https://biogeomacro.github.io/GIFT/}, }"},{"path":"/index.html","id":"gift-","dir":"","previous_headings":"","what":"Access to the Global Inventory of Floras and Traits (GIFT)","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"R package includes several functions extract data Global Inventory Floras Traits (GIFT) database. GIFT global database plant checklists, covering several taxonomic groups providing information floristic status functional traits plants well environmental information checklist. details content database available publication Weigelt et al. (2021).","code":""},{"path":"/index.html","id":"arrow_double_down-installation","dir":"","previous_headings":"","what":"⏬ Installation","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"package CRAN yet still active development. can install development version GitHub repository following command:","code":"# install.packages(\"devtools\") devtools::install_github(\"https://github.com/BioGeoMacro/GIFT\") library(\"GIFT\")"},{"path":"/index.html","id":"document-vignettes","dir":"","previous_headings":"","what":":document: Vignettes","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"wrote several vignettes help using GIFT R package. far, three vignettes available: Main tutorial advanced users API Alternatively, prefer view vignettes R, install package build_vignettes = TRUE. aware vignettes slow generate (main one especially).","code":"remotes::install_github(\"https://github.com/BioGeoMacro/GIFT\",                          dependencies = TRUE, upgrade = \"ask\",                          build_vignettes = TRUE)  vignette(\"GIFT\")"},{"path":"/index.html","id":"tool-functions","dir":"","previous_headings":"","what":":tool: Functions","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"overview functions data given .","code":""},{"path":"/index.html","id":"bug-find-a-bug-","dir":"","previous_headings":"","what":"🐛 Find a bug? 🐛","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"Thank finding . Head GitHub Issues tab let us know . Alternatively, can also send us e-mail. try get soon can!","code":""},{"path":"/index.html","id":"references-and-dependencies","dir":"","previous_headings":"","what":"References and dependencies","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"GIFT depends dplyr, jsonlite, purrr, sf, stats, tidyr utils. Weigelt, P., König, C. & Kreft, H. (2020) GIFT – Global Inventory Floras Traits macroecology biogeography. Journal Biogeography, https://doi.org/10.1111/jbi.13623.","code":""},{"path":"/reference/GIFT_checklist.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT checklists — GIFT_checklist","title":"GIFT checklists — GIFT_checklist","text":"Retrieve GIFT checklists fulfill specific criteria.","code":""},{"path":"/reference/GIFT_checklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT checklists — GIFT_checklist","text":"","code":"GIFT_checklist(   taxon_name = \"Tracheophyta\",   complete_taxon = TRUE,   floristic_group = c(\"all\", \"native\", \"endemic\", \"naturalized\")[2],   complete_floristic = TRUE,   geo_type = c(\"All\", \"Mainland\", \"Island\")[1],   ref_excluded = NULL,   suit_geo = FALSE,   shp = NULL,   coordinates = NULL,   overlap = \"centroid_inside\",   remove_overlap = FALSE,   area_th_island = 0,   area_th_mainland = 100,   overlap_th = 0.1,   by_ref_ID = FALSE,   taxonomic_group = TRUE,   namesmatched = FALSE,   list_set_only = FALSE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_checklist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT checklists — GIFT_checklist","text":"taxon_name Character string corresponding taxonomic group interest. complete_taxon Boolean stating want retrieve checklists contain exhaustive list 'taxon_name' argument well incomplete lists. floristic_group Character among following options: '', 'native', 'endemic', 'naturalized'. complete_floristic Boolean stating want retrieve checklists contain exhaustive list 'floristic_group' argument well incomplete lists. geo_type Character string, either 'Mainland', 'Island' ''. Island gets Island, Island Group & Island Part. Mainland gets Mainland & Island/Mainland. '' gets . ref_excluded vector listing potential ref_IDs shall ignored assembling set regions checklists fulfilling given criteria. Checklists references returned. NULL default. suit_geo Boolean, whether suitable polygons retrieved. shp Shapefile provided user. coordinates Custom set coordinates. format two columns, first one longitudes second latitudes. 4 coordinates given, function assumes four corners bounding box. overlap character string defining criteria use order retrieve checklists. Available options 'centroid_inside', 'extent_intersect', 'shape_intersect' 'shape_inside'. example, 'extent_intersect' means every polygon GIFT extent intersects provided shape/coordinates retrieved. remove_overlap boolean stating whether want retrieve checklists overlap . area_th_island number stating surface smallest overlapping polygon kept. default set 0 square kilometer (meaning default smallest islands conserverd). area_th_mainland two polygons overlap, smallest biggest one can kept. surface smallest polygon exceeds number, smallest polygon kept. Otherwise, keep bigger one. Set default 100 square-kilometers. overlap_th number ranging 0 1, indicating percentage overlap, partially overlapping polygons kept. by_ref_ID logical indicating whether removal overlapping regions shall applied ref_ID . Note regions overlapping regions resource removed even references available regions. taxonomic_group Boolean. set TRUE, two additional columns ('family' 'tax_group') available checklists. namesmatched Boolean. FALSE default, set TRUE want original species name came references well details taxonomic harmonization. list_set_only Boolean. Stating whether want metadata also want retrieve species lists. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_checklist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT checklists — GIFT_checklist","text":"List two data frames: checklist species list ID.","code":""},{"path":"/reference/GIFT_checklist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT checklists — GIFT_checklist","text":"detail data.frame columns: ref_ID - Identification number reference.type- type source .subset- information regarding status species available.native_indicated- Whether native status species available source.natural_indicated - Whether naturalized status species available source.end_ref - Whether endemism information available source.restricted - Whether access reference restricted.taxon_ID- Identification number species.list_ID - Identification number list.end_list - Whether endemism information available list.entity_ID- Identification number polygon list.geo_entity - Name location.suit_geo - polygon suitable.entity_class - Type polygon.entity_type - Name location.taxon_name - Name group taxa available. second data frame species, column refers : ref_ID - Identification number reference.list_ID - Identification number listwork_ID - Identification number species name, taxonomic harmonization.genus_ID - Identification number genus, taxonomic harmonization.species - Species name, taxonomic harmonization.questionable - Whether species occurrence questionable.native - Whether species native.quest_native - Whether native information questionable.naturalized - Whether species naturalized.endemic_ref - Whether species endemic within reference.quest_end_ref - Whether endemic_ref information questionable.endemic_list - Whether species endemic within list.quest_end_list - Whether endemic_list information questionable.cons_status - Conservation status species.family - Family species.tax_group - Taxonomic group species.","code":""},{"path":"/reference/GIFT_checklist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT checklists — GIFT_checklist","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_checklist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT checklists — GIFT_checklist","text":"","code":"if (FALSE) { data(\"med\") ex <- GIFT_checklist(shp = med, overlap = \"centroid_inside\", taxon_name = \"Angiospermae\")  ex2 <- GIFT_checklist(shp = med, overlap = \"centroid_inside\", taxon_name = \"Angiospermae\", list_set_only = TRUE) }"},{"path":"/reference/GIFT_checklist_conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT checklists — GIFT_checklist_conditional","title":"GIFT checklists — GIFT_checklist_conditional","text":"Retrieve meta data GIFT checklists regions covered checklists jointly fulfilling specific criteria.","code":""},{"path":"/reference/GIFT_checklist_conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT checklists — GIFT_checklist_conditional","text":"","code":"GIFT_checklist_conditional(   taxon_name = \"Tracheophyta\",   ref_included = c(\"all\", \"native\", \"native and naturalized\",     \"native and historically introduced\", \"endangered\", \"endemic\", \"naturalized\",     \"other subset\")[1:4],   ref_excluded = NULL,   type_ref = c(\"Account\", \"Catalogue\", \"Checklist\", \"Flora\", \"Herbarium collection\",     \"Key\", \"Red list\", \"Report\", \"Species Database\", \"Survey\"),   entity_class = c(\"Island\", \"Island/Mainland\", \"Mainland\", \"Island Group\",     \"Island Part\"),   native_indicated = FALSE,   natural_indicated = FALSE,   end_ref = FALSE,   end_list = FALSE,   suit_geo = FALSE,   complete_taxon = TRUE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\",   list_set = NULL,   taxonomy = NULL )"},{"path":"/reference/GIFT_checklist_conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT checklists — GIFT_checklist_conditional","text":"taxon_name Character string corresponding taxonomic group interest. ref_included Character, options '', 'native', 'native naturalized', 'native historically introduced', 'endangered', 'endemic', 'naturalized', 'subset' ref_excluded vector listing potential ref_IDs shall ignored assembling set regions checklists fulfilling given criteria. Checklists references returned. NULL default. type_ref Character, options 'Account', 'Catalogue', 'Checklist', 'Flora', 'Herbarium collection', 'Key', 'Red list', 'Report', 'Species Database', 'Survey' entity_class Character, options 'Island', 'Island/Mainland', 'Mainland', 'Island Group', 'Island Part' native_indicated Boolean, whether lists native status available retrieved. natural_indicated Boolean, whether lists natural status available retrieved. end_ref Boolean, whether lists endemism reference level available retrieved. end_list Boolean, whether lists endemism list level available retrieved. suit_geo Boolean, whether suitable polygons retrieved. complete_taxon Boolean, default TRUE. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved. list_set default NULL. , vector identification numbers GIFT checklists. taxonomy default NULL. , taxonomy table (see GIFT_taxonomy()).","code":""},{"path":"/reference/GIFT_checklist_conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT checklists — GIFT_checklist_conditional","text":"data frame 16 columns.","code":""},{"path":"/reference/GIFT_checklist_conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT checklists — GIFT_checklist_conditional","text":"column refers : ref_ID - Identification number reference.type - type source .subset - information regarding status species available.native_indicated - Whether native status species available source.natural_indicated - Whether naturalized status species available source.end_ref - Whether endemism information available source.restricted - Whether access reference restricted.taxon_ID - Identification number species.list_ID - Identification number list.end_list - Whether endemism information available list.entity_ID - Identification number polygon list.geo_entity - Name location.suit_geo - polygon suitable.entity_class - Type polygon.entity_type - Name location.taxon_name - Name group taxa available.","code":""},{"path":"/reference/GIFT_checklist_conditional.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT checklists — GIFT_checklist_conditional","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_checklist_conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT checklists — GIFT_checklist_conditional","text":"","code":"if (FALSE) { ex <- GIFT_checklist_conditional(taxon_name = \"Embryophyta\",  ref_included = c(\"all\", \"native\", \"native and naturalized\", \"native and historically introduced\", \"endangered\", \"endemic\", \"naturalized\", \"other subset\")[1:4], type_ref = c(\"Account\", \"Catalogue\", \"Checklist\",\"Flora\", \"Herbarium collection\", \"Key\", \"Red list\", \"Report\", \"Species Database\",  \"Survey\"),  entity_class = c(\"Island\", \"Island/Mainland\", \"Mainland\", \"Island Group\",  \"Island Part\"),  native_indicated = FALSE, natural_indicated = FALSE, end_ref = FALSE,  end_list = FALSE, suit_geo = TRUE, complete_taxon = TRUE,  list_set = NULL, taxonomy = NULL)  }"},{"path":"/reference/GIFT_checklist_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT checklists — GIFT_checklist_raw","title":"GIFT checklists — GIFT_checklist_raw","text":"Raw checklist, combine functions","code":""},{"path":"/reference/GIFT_checklist_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT checklists — GIFT_checklist_raw","text":"","code":"GIFT_checklist_raw(   ref_ID = NULL,   list_ID = NULL,   namesmatched = FALSE,   taxon_name = \"Tracheophyta\",   floristic_group = \"all\",   list_set = NULL,   taxonomy = NULL,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_checklist_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT checklists — GIFT_checklist_raw","text":"ref_ID vector defining IDs references retrieve. NULL default. list_ID vector defining IDs lists retrieve. NULL default. lists retrieved addition lists contained references ref_ID. namesmatched Boolean. FALSE default, set TRUE want original species name came references well details taxonomic harmonization. taxon_name Character string corresponding taxonomic group interest. floristic_group Character string among options: '', 'native', 'naturalized', 'endemic_list', 'endemic_ref'. list_set NULL default taxonomy NULL default GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_checklist_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT checklists — GIFT_checklist_raw","text":"data frame 15 29 columns (depending namesmatched). data frame contains species checklist given reference/list.","code":""},{"path":"/reference/GIFT_checklist_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT checklists — GIFT_checklist_raw","text":"column refers : ref_ID - Identification number referencelist_ID - Identification number listorig_ID - Identification number species name, unchanged sourcesname_ID - Identification number referencegenus - Genus speciesspecies_epithet - Epithet speciessubtaxon - needed, subtaxon speciesauthor - Name author described speciesmatched - Whether match found using taxonomic backboneepithetscore - Matching score epithetoverallscore - Matching score overall species nameresolved - Whether species name resolvedservice - Service used taxonomic harmonizationwork_ID - Identification number species name, taxonomic  harmonizationgenus_ID - Identification number genus, taxonomic harmonizationspecies - Species name, taxonomic harmonizationquestionable - Whether species occurrence questionablenative - Whether species nativequest_native - Whether native information questionablenaturalized - Whether species naturalizedendemic_ref - Whether species endemic within referencequest_end_ref - Whether endemic_ref information questionableendemic_list- Whether species endemic within listquest_end_list - Whether endemic_list information questionablecons_status - Conservation status species","code":""},{"path":"/reference/GIFT_checklist_raw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT checklists — GIFT_checklist_raw","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_checklist_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT checklists — GIFT_checklist_raw","text":"","code":"if (FALSE) { ex <- GIFT_checklist_raw(list_ID = c(1,5)) ex2 <- GIFT_checklist_raw(list_ID = c(1,5), namesmatched = TRUE) }"},{"path":"/reference/GIFT_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Environmental data for GIFT checklists — GIFT_env","title":"Environmental data for GIFT checklists — GIFT_env","text":"Retrieve environmental data associated GIFT checklists. can come rasters shapefiles (miscellaneous)","code":""},{"path":"/reference/GIFT_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environmental data for GIFT checklists — GIFT_env","text":"","code":"GIFT_env(   entity_ID = NULL,   miscellaneous = \"area\",   rasterlayer = NULL,   sumstat = \"mean\",   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environmental data for GIFT checklists — GIFT_env","text":"entity_ID vector defining ID lists retrieve. NULL default, case, every list GIFT retrieved. miscellaneous character vector list defining miscellaneous data retrieve. rasterlayer character vector list defining raster data retrieve. sumstat Vector list indicating desired summary statistics c(\"min\", \"q05\", \"q10\", \"q20\", \"q25\", \"q30\", \"q40\", \"med\", \"q60\", \"q70\", \"q75\", \"q80\", \"q90\", \"q95\", \"max\", \"mean\", \"sd\", \"modal\", \"unique_n\", \"H\", \"n\") used aggregate information coming raster layers. sumstat vector, summary statistics used raster layers. sumstat list, first element defines summary statistics first raster layer, second second .Important note summary statistics may informative depending environmental layer ask . example, relevant retrieve mean soil classes polygon. mode Shannon index suitable case. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environmental data for GIFT checklists — GIFT_env","text":"data frame environmental values per polygon (entity_ID).","code":""},{"path":"/reference/GIFT_env.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environmental data for GIFT checklists — GIFT_env","text":"columns data.frame following: entity_ID - Identification number polygongeo_entity - Name polygon columns relate environmental variables user asked .","code":""},{"path":"/reference/GIFT_env.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Environmental data for GIFT checklists — GIFT_env","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environmental data for GIFT checklists — GIFT_env","text":"","code":"if (FALSE) { ex <- GIFT_env(miscellaneous = \"perimeter\") ex <- GIFT_env(entity_ID = c(1,5), miscellaneous = c(\"perimeter\", \"biome\"))  ex <- GIFT_env(entity_ID = c(1,5),                miscellaneous = c(\"perimeter\", \"biome\"),                rasterlayer = c(\"mn30_grd\", \"wc2.0_bio_30s_01\"),                sumstat = \"mean\")  ex <- GIFT_env(entity_ID = c(1,5),                miscellaneous = c(\"perimeter\", \"biome\"),                rasterlayer = c(\"mn30_grd\", \"wc2.0_bio_30s_01\"),                sumstat = c(\"mean\", \"med\"))  ex <- GIFT_env(entity_ID = c(1,5),                miscellaneous = c(\"perimeter\", \"biome\"),                rasterlayer = c(\"mn30_grd\", \"wc2.0_bio_30s_01\"),                sumstat = list(c(\"mean\", \"med\"), \"max\"))  }"},{"path":"/reference/GIFT_env_meta_misc.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"Retrieve metadata miscellaneous environmental layers accessible GIFT","code":""},{"path":"/reference/GIFT_env_meta_misc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"","code":"GIFT_env_meta_misc(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_env_meta_misc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_env_meta_misc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"data frame 5 columns.","code":""},{"path":"/reference/GIFT_env_meta_misc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"column refers : dataset - Name source dataset.variable - Name environmental layer.description- Description.unit - Unit.ref_long - Full reference cite using environmental layer.","code":""},{"path":"/reference/GIFT_env_meta_misc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_env_meta_misc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"","code":"if (FALSE) { ex <- GIFT_env_meta_misc() }"},{"path":"/reference/GIFT_env_meta_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"Retrieve metadata every environmental raster accessible GIFT","code":""},{"path":"/reference/GIFT_env_meta_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"","code":"GIFT_env_meta_raster(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_env_meta_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_env_meta_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"data frame 10 columns.","code":""},{"path":"/reference/GIFT_env_meta_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"column refers : dataset - Name source datasetlayer_name - Name environmental layerlayer - Full namedescription - Descriptionunit - Unitcoord_system - Coordinate systemresolution - Resolutionextent - Extentversion - Version sourceref_long - Full reference cite using environmental layer","code":""},{"path":"/reference/GIFT_env_meta_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_env_meta_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"","code":"if (FALSE) { ex <- GIFT_env_meta_raster() }"},{"path":"/reference/GIFT_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"References available in GIFT — GIFT_lists","title":"References available in GIFT — GIFT_lists","text":"Retrieves metadata reference within GIFT.","code":""},{"path":"/reference/GIFT_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"References available in GIFT — GIFT_lists","text":"","code":"GIFT_lists(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"References available in GIFT — GIFT_lists","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"References available in GIFT — GIFT_lists","text":"data frame 15 columns.","code":""},{"path":"/reference/GIFT_lists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"References available in GIFT — GIFT_lists","text":"column refers : ref_ID - Identification number reference. Columns type subset indicate information can found reference. Similarly, native_indicated, natural_indicated end_ref indicate respectively whether native, naturalized endemic species stated reference. restricted refers availability reference, taxon_ID taxonomic group available reference. list_ID identification number checklist within reference, entity_ID associated polygon. geo_entity associates name identification number. suit_geo indicates whether checklist suitable use, entity_class entity_unit give additional details polygon.","code":""},{"path":"/reference/GIFT_lists.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"References available in GIFT — GIFT_lists","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"References available in GIFT — GIFT_lists","text":"","code":"if (FALSE) { ex <- GIFT_lists() }"},{"path":"/reference/GIFT_no_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT_no_overlap — GIFT_no_overlap","title":"GIFT_no_overlap — GIFT_no_overlap","text":"Identify overlapping regions set GIFT regions choose non-overlapping regions based size overlap criteria","code":""},{"path":"/reference/GIFT_no_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT_no_overlap — GIFT_no_overlap","text":"","code":"GIFT_no_overlap(   entity_IDs = NULL,   area_th_island = 0,   area_th_mainland = 100,   overlap_th = 0.1,   geoentities_overlap = NULL,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_no_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT_no_overlap — GIFT_no_overlap","text":"entity_IDs vector IDs regions want check overlap area_th_island number stating surface smallest overlapping polygon kept. default set 0 square kilometer (meaning default smallest islands conserved). area_th_mainland two polygons overlap, smallest biggest one can kept. surface smallest polygon exceeds number, smallest polygon kept. Otherwise, keep bigger one. Set default 100 square-kilometers. overlap_th number ranging 0 1, indicating percentage overlap, partially overlapping polygons kept. geoentities_overlap table coming GIFT indicating overlap km^2 pairs polygons. api Character string defining API data retrieved. GIFT_version Character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_no_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT_no_overlap — GIFT_no_overlap","text":"vector entity_IDs (identification numbers polygons) non-overlapping.","code":""},{"path":"/reference/GIFT_no_overlap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT_no_overlap — GIFT_no_overlap","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_no_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT_no_overlap — GIFT_no_overlap","text":"","code":"if (FALSE) { ex <- GIFT_no_overlap(entity_IDs = c(10071, 12078)) # Andalusia and Spain.  # We get Andalusia because it is smaller than Spain and larger than 100 km² ex2 <- GIFT_no_overlap(entity_IDs = c(10071, 12078),  area_th_mainland = 100000) # since Andalusia is smaller than 100,000 km²  # large, the larger entity (Spain) is chosen here. }"},{"path":"/reference/GIFT_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"Calculate spatial overlap GIFT polygons shapefiles coming resources","code":""},{"path":"/reference/GIFT_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"","code":"GIFT_overlap(   resource = \"glonaf\",   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"resource character string indicating resource spatial overlap calculated. Available options 'glonaf' 'gmba'. glonaf stands Global Naturalized Alien Flora gmba Global Mountain Biodiversity Assessment. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"data frame spatial overlap.","code":""},{"path":"/reference/GIFT_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"columns data.frame following: entity_ID - Identification number GIFT polygonglonaf_ID (gmba_ID) - Identification number polygon resourceoverlap12 - Spatial overlap percentage GIFT polygon external polygonoverlap21 - way around","code":""},{"path":"/reference/GIFT_overlap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"","code":"if (FALSE) { glonaf <- GIFT_overlap(resource = \"glonaf\") gmba <- GIFT_overlap(resource = \"gmba\") }"},{"path":"/reference/GIFT_references.html","id":null,"dir":"Reference","previous_headings":"","what":"References available in GIFT — GIFT_references","title":"References available in GIFT — GIFT_references","text":"Retrieve metadata every reference accessible GIFT","code":""},{"path":"/reference/GIFT_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"References available in GIFT — GIFT_references","text":"","code":"GIFT_references(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"References available in GIFT — GIFT_references","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"References available in GIFT — GIFT_references","text":"data frame 14 columns.","code":""},{"path":"/reference/GIFT_references.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"References available in GIFT — GIFT_references","text":"column refers : ref_ID - Identification number referenceref_long - Full reference referencegeo_entity_ref - Name locationtype - type source issubset - information regarding status species availabletaxon_ID - Identification number group taxa availabletaxon_name - Name group taxa availablechecklist - source checklistnative_indicated - Whether native status species available sourcenatural_indicated - Whether naturalized status species available sourceend_ref - Whether endemism information available sourcetraits - Whether trait information available sourcerestricted - Whether access reference restrictedproc_date - source processed","code":""},{"path":"/reference/GIFT_references.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"References available in GIFT — GIFT_references","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_references.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"References available in GIFT — GIFT_references","text":"","code":"if (FALSE) { ex <- GIFT_references() }"},{"path":"/reference/GIFT_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT regions — GIFT_regions","title":"GIFT regions — GIFT_regions","text":"Retrieves miscellaneous information GIFT regions.","code":""},{"path":"/reference/GIFT_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT regions — GIFT_regions","text":"","code":"GIFT_regions(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT regions — GIFT_regions","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT regions — GIFT_regions","text":"data frame 7 columns.","code":""},{"path":"/reference/GIFT_regions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT regions — GIFT_regions","text":"detail column: entity_ID - Identification number GIFT polygonsgeo_entity - Name GIFT polygonssuit_geo - Whether polygon suitableentity_class - Class polygonentity_type - Type polygonTDWG_lvl3_ID - Whether polygon TDWG region (see https://www.tdwg.org/)country - Whether polygon country","code":""},{"path":"/reference/GIFT_regions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT regions — GIFT_regions","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT regions — GIFT_regions","text":"","code":"if (FALSE) { ex <- GIFT_regions() }"},{"path":"/reference/GIFT_richness.html","id":null,"dir":"Reference","previous_headings":"","what":"Species richness and trait coverage in GIFT — GIFT_richness","title":"Species richness and trait coverage in GIFT — GIFT_richness","text":"Retrieve either species richness per polygon trait coverage given trait.","code":""},{"path":"/reference/GIFT_richness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species richness and trait coverage in GIFT — GIFT_richness","text":"","code":"GIFT_richness(   what = \"species_richness\",   taxon_name = \"Embryophyta\",   trait_ID = \"1.1.1\",   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_richness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species richness and trait coverage in GIFT — GIFT_richness","text":"Species richness trait coverage. taxon_name Name taxonomic group want retrieve. trait_ID Identification number trait want retrieve. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_richness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species richness and trait coverage in GIFT — GIFT_richness","text":"data frame either species richness trait coverage per GIFT polygon.","code":""},{"path":"/reference/GIFT_richness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species richness and trait coverage in GIFT — GIFT_richness","text":"output 5 columns: entity_ID - Identification number GIFT polygonstotal - total species richness trait coveragenative - number native species trait coverage native speciesnaturalized - number naturalized species trait coverage naturalized speciesendemic_min - number endemic species trait coverage endemic species","code":""},{"path":"/reference/GIFT_richness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species richness and trait coverage in GIFT — GIFT_richness","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_richness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species richness and trait coverage in GIFT — GIFT_richness","text":"","code":"if (FALSE) { ex <- GIFT_richness(what = \"species_richness\", taxon_name = \"Angiospermae\") ex2 <- GIFT_richness(what = \"trait_coverage\", taxon_name = \"Angiospermae\", trait_ID = \"1.2.1\")  }"},{"path":"/reference/GIFT_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT shape — GIFT_shape","title":"GIFT shape — GIFT_shape","text":"Get shapefile GIFT regions selected entities","code":""},{"path":"/reference/GIFT_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT shape — GIFT_shape","text":"","code":"GIFT_shape(   entity_ID = NULL,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT shape — GIFT_shape","text":"entity_ID vector defining IDs regions. api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT shape — GIFT_shape","text":"spatial data.frame 21 columns.","code":""},{"path":"/reference/GIFT_shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT shape — GIFT_shape","text":"detail column: entity_ID - Identification number polygongeo_entity - Name polygonpoint_x - Longitude centroid polygonpoint_y - Latitude centroid polygonarea - Area km2 polygonx_min - Minimum longitude polygonx_max - Maximum longitude polygony_min - Minimum latitude polygony_max - Maximum latitude polygonentity_class - Class polygonentity_type - Type entitypolygon_source - Source polygongeometry - Geometry column sf","code":""},{"path":"/reference/GIFT_shape.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT shape — GIFT_shape","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT shape — GIFT_shape","text":"","code":"if (FALSE) { ex <- GIFT_shape(entity_ID = c(677, 200)) plot(st_geometry(ex), col = ex$entity_ID) }"},{"path":"/reference/GIFT_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Environmental data for GIFT checklists — GIFT_spatial","title":"Environmental data for GIFT checklists — GIFT_spatial","text":"Retrieve environmental data associated GIFT checklists. can come rasters shapefiles (miscellaneous)","code":""},{"path":"/reference/GIFT_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environmental data for GIFT checklists — GIFT_spatial","text":"","code":"GIFT_spatial(   shp = NULL,   coordinates = NULL,   overlap = \"centroid_inside\",   entity_ID = NULL,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environmental data for GIFT checklists — GIFT_spatial","text":"shp Shapefile provided user. coordinates Custom set coordinates. format two columns, first one longitudes second latitudes. 4 coordinates given, function assumes four corners bounding box. overlap character string defining criteria use order retrieve checklists. Available options 'centroid_inside', 'extent_intersect', 'shape_intersect' 'shape_inside'. example, 'extent_intersect' means every polygon GIFT extent intersects provided shape/coordinates retrieved. entity_ID List entity_ID retrieve. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environmental data for GIFT checklists — GIFT_spatial","text":"data frame 3 columns: entity_ID identification number polygon, geo_entity_ref name, coverage indicates percentage overlap provided shape different polygons GIFT.","code":""},{"path":"/reference/GIFT_spatial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Environmental data for GIFT checklists — GIFT_spatial","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environmental data for GIFT checklists — GIFT_spatial","text":"","code":"if (FALSE) { data(\"med\") ex <- GIFT_spatial(shp = med, overlap = \"centroid_inside\") ex2 <- GIFT_spatial(shp = med, overlap = \"extent_intersect\") ex3 <- GIFT_spatial(shp = med, overlap = \"shape_intersect\") ex4 <- GIFT_spatial(shp = med, overlap = \"shape_inside\")  custom_point <- cbind(9.9, 51) ex5 <- GIFT_spatial(coordinates = custom_point, overlap = \"extent_intersect\")  custom_extent <- cbind(c(-13, -18), c(27.5, 29.3)) ex6 <- GIFT_spatial(coordinates = custom_extent, overlap = \"extent_intersect\")  custom_polygon <- cbind(c(-18, -16.9, -13, -13, -18, -18), c(29.3, 33, 29.3, 27.5, 27.5, 29.3)) ex7 <- GIFT_spatial(coordinates = custom_polygon, overlap = \"extent_intersect\")  custom_linestring <- rbind(c(9.9, 51), c(2.35, 48.9)) custom_linestring <- sf::st_as_sf(as.data.frame(custom_linestring), coords = c(\"V1\", \"V2\")) custom_linestring <- dplyr::summarise(custom_linestring, geometry = sf::st_combine(geometry)) sf::st_crs(custom_linestring) <- sf::st_crs(med) ex8 <- GIFT_spatial(shp = custom_linestring, overlap = \"extent_intersect\")  }"},{"path":"/reference/GIFT_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Species list in GIFT — GIFT_species","title":"Species list in GIFT — GIFT_species","text":"Retrieve whole set plant species available GIFT","code":""},{"path":"/reference/GIFT_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species list in GIFT — GIFT_species","text":"","code":"GIFT_species(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species list in GIFT — GIFT_species","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species list in GIFT — GIFT_species","text":"data frame 5 columns.","code":""},{"path":"/reference/GIFT_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species list in GIFT — GIFT_species","text":"column refers : work_ID - Identification number speciesgenus_ID - Identification number genuswork_genus - Genus name taxonomic harmonizationwork_species - Species name taxonomic harmonizationwork_author - Author described species (taxonomic harmonization)","code":""},{"path":"/reference/GIFT_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species list in GIFT — GIFT_species","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species list in GIFT — GIFT_species","text":"","code":"if (FALSE) { ex <- GIFT_species() }"},{"path":"/reference/GIFT_species_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT species distribution — GIFT_species_distribution","title":"GIFT species distribution — GIFT_species_distribution","text":"Retrieve distribution one species GIFT checklits.","code":""},{"path":"/reference/GIFT_species_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT species distribution — GIFT_species_distribution","text":"","code":"GIFT_species_distribution(   genus = \"Fagus\",   epithet = \"sylvatica\",   namesmatched = FALSE,   remove_overlap = FALSE,   area_th_island = 0,   area_th_mainland = 100,   overlap_th = 0.1,   by_ref_ID = FALSE,   aggregation = FALSE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_species_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT species distribution — GIFT_species_distribution","text":"genus Character string corresponding genus species interest. epithet Character string corresponding epithet species interest. namesmatched Boolean. FALSE default, set TRUE want look species standardized species names also original species names came original resources. remove_overlap boolean stating whether want retrieve checklists overlap . area_th_island number stating surface smallest overlapping polygon kept. default set 0 square kilometer (meaning default smallest islands conserved). area_th_mainland two polygons overlap, smallest biggest one can kept. surface smallest polygon exceeds number, smallest polygon kept. Otherwise, keep bigger one. Set default 100 square-kilometers. overlap_th number ranging 0 1, indicating percentage overlap, partially overlapping polygons kept. by_ref_ID logical indicating whether removal overlapping regions shall applied ref_ID . Note regions overlapping regions resource removed even references available regions. aggregation Boolean stating whether want aggregate simpler way floristic status species per entity_ID. example, two lists associated entity_ID describe species native non-native. case, aggregation consider species native. Reverse naturalized alien. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_species_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT species distribution — GIFT_species_distribution","text":"data frame 33 columns.","code":""},{"path":"/reference/GIFT_species_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT species distribution — GIFT_species_distribution","text":"detail data.frame columns: ref_ID - Identification number referencelist_ID - Identification number listentity_ID - Identification number polygonname_ID - Identification number genus taxonomic harmonizationcf_genus - Whether genus name uncertaincf_species - Whether species' epithet uncertainaff_species - Species' epithet uncertainquestionable - Whether species name questionablenative - species nativequest_native - native status questionablenaturalized - species naturalizedendemic_ref - species endemic reference levelquest_end_ref - endemic_ref status questionableendemic_list - species endemic list levelquest_end_list - endemic_list status questionablegenus - Genus name taxonomic harmonizationspecies_epithet - Epithet taxonomic harmonizationsubtaxon - Subtaxon name taxonomic harmonizationauthor - Author described species taxonomic harmonizationmatched - species name matched taxonomic backboneepithetscore - Matching score epithetoverallscore - Overall matching score speciesresolved - species name resolved taxonomic backbonesynonym -species synonym taxonomic backbonematched_subtaxon -sub-species name matched taxonomic backboneaccepted - species name accepted taxonomic backboneservice - Service use taxonomic harmonizationwork_ID -Identification number species taxonomic harmonizationtaxon_ID -Identification number taxonomic groupwork_genus - Identification number genus taxonomic harmonizationwork_species_epithet - Identification number species epithet taxonomic harmonizationwork_species - Species name (taxonomic harmonization)work_author - Author described species (taxonomic harmonization)","code":""},{"path":"/reference/GIFT_species_distribution.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT species distribution — GIFT_species_distribution","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_species_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT species distribution — GIFT_species_distribution","text":"","code":"if (FALSE) { ex <- GIFT_species_distribution() }"},{"path":"/reference/GIFT_species_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Species list in GIFT — GIFT_species_lookup","title":"Species list in GIFT — GIFT_species_lookup","text":"Retrieve name matching information one taxonomic name. results returned, name either found unstandardized taxonomically standardized names.","code":""},{"path":"/reference/GIFT_species_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species list in GIFT — GIFT_species_lookup","text":"","code":"GIFT_species_lookup(   genus = \"\",   epithet = \"\",   namesmatched = FALSE,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_species_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species list in GIFT — GIFT_species_lookup","text":"genus character string defining genus name looked . epithet character string defining specific epithet looked . namesmatched Boolean. FALSE default, set TRUE want look species standardized species names also original species names came original resources. api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_species_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species list in GIFT — GIFT_species_lookup","text":"data frame 19 columns (24 namesmatched = TRUE).","code":""},{"path":"/reference/GIFT_species_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species list in GIFT — GIFT_species_lookup","text":"column refers : orig_ID - Identification number species taxonomic harmonizationorig_genus - Genus taxonomic harmonizationname_ID - Identification number genus taxonomic harmonizationcf_genus- Whether genus name uncertaingenus- Genus taxonomic harmonizationcf_species- Whether species' epithet uncertainaff_species- Species' epithet uncertainspecies_epithet- Epithet species taxonomic harmonizationsubtaxon- Subtaxon species taxonomic harmonizationauthor- Author described species (taxonomic harmonization)matched- species matched taxonomic backboneepithetscore- Matching score epithetoverallscore- Overall matching score speciesresolved- species name resolved taxonomic backbonesynonym- species name synonym taxonomic backbonematched_subtaxon- subtaxon matched taxonomic backboneaccepted- species name accepted taxonomic backboneservice- Service use taxonomic harmonizationwork_ID- Identification number species taxonomic harmonizationtaxon_ID- Identification number taxonomic groupwork_genus- Identification number genus taxonomic harmonizationwork_species_epithet- Identification number species epithet taxonomic harmonizationwork_species - Species name (taxonomic harmonization)work_author-  Author described species (taxonomic harmonization)","code":""},{"path":"/reference/GIFT_species_lookup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species list in GIFT — GIFT_species_lookup","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_species_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species list in GIFT — GIFT_species_lookup","text":"","code":"if (FALSE) { ex <- GIFT_species_lookup(genus = \"Fagus\", epithet = \"sylvatica\") }"},{"path":"/reference/GIFT_taxgroup.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT taxgroup — GIFT_taxgroup","title":"GIFT taxgroup — GIFT_taxgroup","text":"Assign taxonomic groups various hierarchical level species GIFT (work_ID)","code":""},{"path":"/reference/GIFT_taxgroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT taxgroup — GIFT_taxgroup","text":"","code":"GIFT_taxgroup(   work_ID = NULL,   taxon_lvl = c(\"family\", \"order\", \"higher_lvl\")[1],   return_ID = FALSE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\",   taxonomy = NULL,   species = NULL )"},{"path":"/reference/GIFT_taxgroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT taxgroup — GIFT_taxgroup","text":"work_ID vector defining IDs species retrieve taxonomic groups . Null default. taxon_lvl taxonomic level retrieve names . \"family\" default. Check GIFT_taxonomy() available levels. addition available levels one can put \"higher_lvl\" retrieve higher level groups \"Anthocerotophyta\", \"Marchantiophyta\", \"Bryophyta\", \"Lycopodiophyta\", \"Monilophyta\", \"Gymnospermae\", \"Angiospermae\". return_ID logical indicating whether give back taxon_IDs instead names. GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved. taxonomy option supply taxonomy object loaded already avoid double loading. internal use within GIFT functions. NULL (default) taxonomy loaded within function. species option supply species names object loaded already avoid double loading. internal use within GIFT functions. NULL (default) species loaded within function.","code":""},{"path":"/reference/GIFT_taxgroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT taxgroup — GIFT_taxgroup","text":"vector taxonomic group species used input.","code":""},{"path":"/reference/GIFT_taxgroup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT taxgroup — GIFT_taxgroup","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_taxgroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT taxgroup — GIFT_taxgroup","text":"","code":"if (FALSE) { ex <- GIFT_taxgroup(work_ID = c(1:5), taxon_lvl = \"family\") ex2 <- GIFT_taxgroup(work_ID = c(1:5), taxon_lvl = \"higher_lvl\") }"},{"path":"/reference/GIFT_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomy of GIFT — GIFT_taxonomy","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"Retrieves taxonomy GIFT.","code":""},{"path":"/reference/GIFT_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"","code":"GIFT_taxonomy(   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"/reference/GIFT_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"GIFT_version character string defining version GIFT database use. function retrieves default --date version. api character string defining API data retrieved.","code":""},{"path":"/reference/GIFT_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"data frame 6 columns.","code":""},{"path":"/reference/GIFT_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"Column taxon_ID indicates identification number taxonomic entry. names describing taxa column taxon_name.third column spells author name given taxon. column taxon_lvl splits every taxon genus, family, order superior orders. Taxonomy linear sequence left right borders taxon. nested, example left right borders genus fall left right borders corresponding family. Columns lft rgt respectively refer left right borders.","code":""},{"path":"/reference/GIFT_taxonomy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"","code":"if (FALSE) { ex <- GIFT_taxonomy() }"},{"path":"/reference/GIFT_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT_traits — GIFT_traits","title":"GIFT_traits — GIFT_traits","text":"Retrieve specific trait values.","code":""},{"path":"/reference/GIFT_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT_traits — GIFT_traits","text":"","code":"GIFT_traits(   trait_IDs = \"\",   agreement = 0.66,   bias_ref = TRUE,   bias_deriv = TRUE,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT_traits — GIFT_traits","text":"trait_IDs character string indicating trait want retrieve. Traits must belong available list traits. agreement Percentage resources agree aggregated trait value, entries threshold omitted. bias_ref FALSE, exclude entries based resource potentially introduces bias (e.g. resource including trees). bias_deriv FALSE, exclude entries based derivation potentially introduces bias (e.g. phanerophytes woody life forms ambiguous). api Character string API. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT_traits — GIFT_traits","text":"long-format data frame 6 columns: trait_ID, work_ID, species, trait_value, agreement references.","code":""},{"path":"/reference/GIFT_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT_traits — GIFT_traits","text":"detail column: trait_ID - Identification number traitwork_ID - Identification number taxonomically harmonized speciesspecies - Species nametrait_value - Value traitagreement - Agreement score different sources trait value, categorical traitscv - Coefficient variation different sources trait value, numeric traitsn - Number sources leading trait valuereferences - ref_ID got trait information","code":""},{"path":"/reference/GIFT_traits.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT_traits — GIFT_traits","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_traits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT_traits — GIFT_traits","text":"","code":"if (FALSE) { wood <- GIFT_traits(trait_IDs = c(\"1.1.1\", \"1.2.1\"), agreement = 0.66, bias_ref = FALSE, bias_deriv = FALSE) }"},{"path":"/reference/GIFT_traits_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT_traits_meta — GIFT_traits_meta","title":"GIFT_traits_meta — GIFT_traits_meta","text":"Retrieve metadata functional traits.","code":""},{"path":"/reference/GIFT_traits_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT_traits_meta — GIFT_traits_meta","text":"","code":"GIFT_traits_meta(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_traits_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT_traits_meta — GIFT_traits_meta","text":"api Character string corresponding API. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_traits_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT_traits_meta — GIFT_traits_meta","text":"data frame 10 columns.","code":""},{"path":"/reference/GIFT_traits_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT_traits_meta — GIFT_traits_meta","text":"column refers : Lvl1 - First level trait classificationCategory - Name first level classificationLvl2 - Second level trait classificationTrait1 - Name second level classificationLvl3 - Identification number traitTrait2 - Trait nameUnits - Trait unittype - Trait typecomment - Commentcount - many entries traits database","code":""},{"path":"/reference/GIFT_traits_meta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT_traits_meta — GIFT_traits_meta","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_traits_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT_traits_meta — GIFT_traits_meta","text":"","code":"if (FALSE) { ex <- GIFT_traits_meta() }"},{"path":"/reference/GIFT_traits_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT_traits_raw — GIFT_traits_raw","title":"GIFT_traits_raw — GIFT_traits_raw","text":"Retrieve non-aggregated trait values level bibliographic references un-standardized species names GIFT.","code":""},{"path":"/reference/GIFT_traits_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT_traits_raw — GIFT_traits_raw","text":"","code":"GIFT_traits_raw(   trait_IDs = \"\",   derived = TRUE,   bias_ref = TRUE,   bias_deriv = TRUE,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"/reference/GIFT_traits_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT_traits_raw — GIFT_traits_raw","text":"trait_IDs character string indicating traits want retrieve. Traits must belong available list traits. See GIFT_traits_meta() derived include logically derived traits. bias_ref FALSE, exclude entries based resource potentially introduces bias (e.g. resource including trees). bias_deriv FALSE, exclude entries based derivation potentially introduces bias (e.g. phanerophytes woody life forms ambiguous). api Character string API. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"/reference/GIFT_traits_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT_traits_raw — GIFT_traits_raw","text":"data.frame 26 columns.","code":""},{"path":"/reference/GIFT_traits_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT_traits_raw — GIFT_traits_raw","text":"detail column: trait_derived_ID - ref_ID - Identification number referenceorig_ID - Identification number species, came sourcetrait_ID - Identification number traittrait_value - Value traitderived - trait value derived another information (e.g. phanerophytes woody)bias_deriv - derivation potentially introducing biasname_ID - Identification number species resolvedcf_genus - Whether genus name uncertaingenus - Genus speciescf_species - Whether species' epithet uncertainaff_species - Species' epithet uncertainspecies_epithet - Epithet speciessubtaxon - Sub-taxon nameauthor - Author described speciesmatched - species name matched taxonomic backboneepithetscore - Matching score epithetoverallscore - Overall matching scoreresolved - species name resolved taxonomic backboneservice - Taxonomic backbone used taxonomic harmonizationwork_ID - Identification number taxonomically harmonized speciesbias_ref - resource potentially introducing biasspecies - Species namegeo_entity _ref - Name region referenceref_long - Full reference cite","code":""},{"path":"/reference/GIFT_traits_raw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT_traits_raw — GIFT_traits_raw","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_traits_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT_traits_raw — GIFT_traits_raw","text":"","code":"if (FALSE) { succulence_carnivory <- GIFT_traits_raw(trait_IDs = c(\"4.10.1\", \"4.16.1\")) }"},{"path":"/reference/GIFT_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Version of GIFT available — GIFT_version","title":"Version of GIFT available — GIFT_version","text":"Returns table information different versions database","code":""},{"path":"/reference/GIFT_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Version of GIFT available — GIFT_version","text":"","code":"GIFT_version()"},{"path":"/reference/GIFT_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Version of GIFT available — GIFT_version","text":"data frame 4 columns.","code":""},{"path":"/reference/GIFT_version.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Version of GIFT available — GIFT_version","text":"column refers : ID - Identification number versionversion - Version numberdescription - major updates ","code":""},{"path":"/reference/GIFT_version.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Version of GIFT available — GIFT_version","text":"","code":"Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"/reference/GIFT_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Version of GIFT available — GIFT_version","text":"","code":"if (FALSE) { ex <- GIFT_version() }"},{"path":"/reference/med.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape file of Mediterranean region — med","title":"Shape file of Mediterranean region — med","text":"Shape file encompassing Mediterranean sea. CRS WGS84.","code":""},{"path":"/reference/med.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape file of Mediterranean region — med","text":"","code":"data(\"med\")"},{"path":"/reference/med.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Shape file of Mediterranean region — med","text":"object class \"cross\"; see read.cross.","code":""},{"path":"/reference/med.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape file of Mediterranean region — med","text":"","code":"data(med)"}]
