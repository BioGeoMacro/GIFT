[{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"shapefile","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.1. Shapefile","title":"GIFT tutorial","text":"Let’s assume interested floristic knowledge western part Mediterranean basin. purpose, can simply use shape file region interest feed GIFT_checklists() function. provide shape file region GIFT R package, can access using data(\"western_mediterranean\") command.  Please note shapes used GIFT unprojected (Geographic Coordinate  System WGS84), shapefiles provided CRS. can check coordinate reference system sf object using sf::st_crs().","code":"data(\"western_mediterranean\")  world <- ne_coastline(scale = \"medium\", returnclass = \"sf\") world_countries <- ne_countries(scale = \"medium\", returnclass = \"sf\") # Fixing polygons crossing dateline world <- st_wrap_dateline(world) world_countries <- st_wrap_dateline(world_countries)  # Eckert IV projection eckertIV <-   \"+proj=eck4 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\"  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = western_mediterranean, fill = \"darkblue\", color = \"black\",           alpha = 0.5, size = 1) +   labs(title = \"Western Mediterranean basin\") +   lims(x = c(-20, 20), y = c(24, 48)) +   theme_void()"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"main-arguments","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.2. Main arguments","title":"GIFT tutorial","text":"Now shape region interest, let’s call GIFT_checklists(). wrapper function many arguments, detail subsection.  First, taxonomic group interest. may interested particular group plants, say Angiosperms. case, set taxon_name argument like taxon_name = \"Angiospermae\". interested particular family plants, let’s say orchids, taxon_name = \"Orchidaceae\".  see options taxon_name argument, can run GIFT_taxonomy() function look taxon_name column output.  Along first argument comes complete_taxon. argument, set TRUE default, determines whether regions represented checklists GIFT completely cover taxon interest retrieved. Figure 1 illustrates principle. Figure 1. Principle complete_taxon argument Figure 1, want retrieve checklists Angiosperms. first available region, region , one checklist interest. checklist always retrieved. region B, one checklist orchids, subset Angiosperms. complete_taxon set TRUE, checklist won’t retrieved, otherwise yes. Finally, region C, checklist vascular plants one orchids. cases, checklist vascular plants retrieved filtering non-angiosperm species. checklist Orchids also retrieved cases one available can complete floristic knowledge Angiosperms region.  following arguments GIFT_checklists() refer floristic status plant species. example, may interested endemic naturalized species. default value get native species.  Similarly, two arguments needed function. First, floristic_group defines group interest. Second, complete_floristic indicates whether retrieve incomplete regions respect selected floristic group. logic detailed Figure 2 similar complete_taxon argument shown Figure 2. Principle complete_floristic argument  next set arguments relate spatial match desired area GIFT database. main argument regard, providing shapefile set coordinates, overlap argument. argument can take 4 options, produces different result, shown Figure 3. Figure 3. Principle GIFT_spatial()  Figure3, GIFT polygons shown orange either intersect, fall inside outside provided shape file. overlap argument GIFT polygon illustrates situation given GIFT polygon retrieved.  Another important spatial feature provide possibility remove overlapping polygons. fact, many regions world, several polygons GIFT database cover . overlapping polygons issue case study, can simply set remove_overlap FALSE (top right part Figure 4). However, want one polygon per region, can set remove_overlap TRUE. case, GIFT_checklists() either retrieve smaller larger polygon. depends values set area_threshold_mainland argument shown Figure 4. Figure 4. Removing overlapping polygons remove_overlap argument  area_threshold_mainland takes value km2km^2. area smaller polygon less threshold, larger overlapping polygon retrieved (lower left part Figure 4). smaller polygon exceeds threshold, retrieved (lower right part Figure 4). similar argument islands, area_threshold_island, set 0 km2km^2 default. way smaller islands always retrieved default.  Note also polygons considered overlap exceed certain percentage overlap. percentage can modified using overlap_threshold argument (Figure 5). argument set default 10%. Figure 5. Principle overlap_th argument","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"gift_checklists","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.3. GIFT_checklists()","title":"GIFT tutorial","text":"Now covered main arguments GIFT_checklists(), can retrieve plant checklists Mediterranean region. GIFT_checklists() returns list two elements. First metadata checklists matching different criteria, named $lists. second element data.frame checklists species composition per checklist ($checklists).  want retrieve metadata, can set list_set_only argument TRUE. retrieve species composition:  can now estimation number checklists native Angiosperm species western part Mediterranean basin, well number species. can now apply different values arguments detailed . can see, number checklists retrieved decreases become stricter criteria. example, removing overlapping regions: Note function works shape file can accept set coordinates. example illustrates case want retrieve GIFT checklists intersect coordinates Göttingen.  cite properly references retrieved, can run function GIFT_references() look column ref_long. column geo_entity_ref associates reference name.","code":"ex_meta <- GIFT_checklists(taxon_name = \"Angiospermae\",                            shp = western_mediterranean,                            overlap = \"centroid_inside\",                            list_set_only = TRUE) medit <- GIFT_checklists(taxon_name = \"Angiospermae\",                          complete_taxon = TRUE,                          floristic_group = \"native\",                          complete_floristic = TRUE,                          geo_type = \"All\",                          shp = western_mediterranean,                          overlap = \"centroid_inside\",                           remove_overlap = FALSE,                          taxonomic_group = TRUE) # this argument adds two # columns to the checklist: plant family and taxonomic group of each species # Number of references covered length(unique(medit[[2]]$ref_ID)) #   22 references  # Number of checklists covered (one reference can have several lists inside) length(unique(medit[[2]]$list_ID)) #   115 checklists  # Number of species length(unique(medit[[2]]$work_species)) #   12840 plant species medit_no_overlap <- GIFT_checklists(shp = western_mediterranean,                                     overlap = \"centroid_inside\",                                     taxon_name = \"Angiospermae\",                                     remove_overlap = TRUE)  # Number of references covered length(unique(medit[[2]]$ref_ID)) # 23 references length(unique(medit_no_overlap[[2]]$ref_ID)) # 22 references custom_point <- cbind(9.9, 51) # coordinates of Göttingen  got <- GIFT_checklists(coordinates = custom_point,                        overlap = \"extent_intersect\",                        taxon_name = \"Angiospermae\",                        remove_overlap = TRUE,                        list_set_only = TRUE)"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"species-richness-map","dir":"Articles","previous_headings":"1. Checklists for a region","what":"1.4. Species richness map","title":"GIFT tutorial","text":"downloaded set checklists, possible map species richness taxonomic group interest. , use combination two functions: GIFT_richness() returns either species richness trait coverage per polygon, GIFT_shapes() returns shapefile list GIFT polygons.  next two chunks illustrate Angiosperms World Western part Mediterranean basin.  customizing code , can also produce nicer map:  R code produce map interested.  can also produce maps richness intermediate scales. code map Angiosperms Western Mediterranean basin.","code":"gift_shapes <- GIFT_shapes() # retrieves all shapefiles by default angio_rich <- GIFT_richness(taxon_name = \"Angiospermae\")  rich_map <- dplyr::left_join(gift_shapes, angio_rich, by = \"entity_ID\") %>%   dplyr::filter(stats::complete.cases(total))  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = rich_map, aes(fill = total + 1)) +   scale_fill_viridis_c(\"Species number\\n(log-transformed)\", trans = \"log10\",                        labels = scales::number_format(accuracy = 1)) +   labs(title = \"Angiosperms\", subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void() # Background box xmin <- st_bbox(world)[[\"xmin\"]]; xmax <- st_bbox(world)[[\"xmax\"]] ymin <- st_bbox(world)[[\"ymin\"]]; ymax <- st_bbox(world)[[\"ymax\"]] bb <- sf::st_union(sf::st_make_grid(st_bbox(c(xmin = xmin,                                               xmax = xmax,                                               ymax = ymax,                                               ymin = ymin),                                             crs = st_crs(4326)),                                     n = 100))  # Equator line equator <- st_linestring(matrix(c(-180, 0, 180, 0), ncol = 2, byrow = TRUE)) equator <- st_sfc(equator, crs = st_crs(world))  # Color code from Barthlott 2007 hexcode_barthlott2007 <- c(\"#fbf9ed\", \"#f3efcc\", \"#f6e39e\", \"#cbe784\",                            \"#65c66a\", \"#0e8d4a\", \"#4a6fbf\",                            \"#b877c2\", \"#f24dae\", \"#ed1c24\")  ggplot(world) +   geom_sf(data = bb, fill = \"aliceblue\") +   geom_sf(data = equator, color = \"gray50\", linetype = \"dashed\",           linewidth = 0.1) +   geom_sf(data = world_countries, fill = \"antiquewhite1\", color = NA) +   geom_sf(color = \"gray50\", linewidth = 0.1) +   geom_sf(data = bb, fill = NA) +   geom_sf(data = rich_map,           aes(fill = ifelse(rich_map$entity_class %in%                               c(\"Island/Mainland\", \"Mainland\",                                 \"Island Group\", \"Island Part\"),                             total + 1, NA)),           size = 0.1) +   geom_point(data = rich_map,              aes(color = ifelse(rich_map$entity_class %in%                                   c(\"Island\"),                                 total + 1, NA),                  geometry = geometry),              stat = \"sf_coordinates\", size = 1, stroke = 0.5) +   scale_color_gradientn(     \"Species number\", trans = \"log10\", limits = c(1, 40000),      colours = hexcode_barthlott2007,     breaks = c(1, 10, 100, 1000, 10000, 40000),     labels = c(1, 10, 100, 1000, 10000, 40000),     na.value = \"transparent\") +   scale_fill_gradientn(     \"Species number\", trans = \"log10\", limits = c(1, 40000),      colours = hexcode_barthlott2007,     breaks = c(1, 10, 100, 1000, 10000, 40000),     labels = c(1, 10, 100, 1000, 10000, 40000),     na.value = \"transparent\") +   labs(title = \"Angiosperms\", subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void() med_shape <- gift_shapes[which(gift_shapes$entity_ID %in%                                   unique(medit[[2]]$entity_ID)), ]  med_rich <- angio_rich[which(angio_rich$entity_ID %in%                                 unique(medit[[2]]$entity_ID)), ]  med_map <- dplyr::left_join(med_shape, med_rich, by = \"entity_ID\") %>%   dplyr::filter(stats::complete.cases(total))  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = western_mediterranean,           fill = \"darkblue\", color = \"black\", alpha = 0.1, size = 1) +   geom_sf(data = med_map, aes(fill = total)) +   scale_fill_viridis_c(\"Species number\") +   labs(title = \"Angiosperms in the Western Mediterranean basin\") +   lims(x = c(-20, 20), y = c(24, 48)) +   theme_void()"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"distribution-of-species","dir":"Articles","previous_headings":"","what":"2. Distribution of species","title":"GIFT tutorial","text":"GIFT R package also allows retrieving spatial distribution focal plant species.","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"available-species","dir":"Articles","previous_headings":"2. Distribution of species","what":"2.1. Available species","title":"GIFT tutorial","text":"know plant species available, can first run function GIFT_species(). 364571 species currently available database. number may increase new releases database. See dedicated section advanced vignettes details.","code":"all_sp <- GIFT_species()"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"species-names-and-taxonomic-harmonization","dir":"Articles","previous_headings":"2. Distribution of species","what":"2.2. Species names and taxonomic harmonization","title":"GIFT tutorial","text":"Since GIFT collection checklists authors use taxonomic knowledge describe species, step taxonomic harmonization including checklists database. commonly used backbone World Checklists Vascular Plants (WCVP).  original harmonized names stored database can use GIFT_species_lookup() function look differences particular species. example, wood anemone Anemonoides nemorosa. Looking output table, can see original species names identification numbers (name_ID) taxonomic harmonization. species names IDs taxonomic harmonization last columns right starting prefix work_.","code":"anemone_lookup <- GIFT_species_lookup(genus = \"Anemonoides\",                                       epithet = \"nemorosa\")  kable(anemone_lookup, \"html\") %>%   kable_styling(full_width = FALSE)"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"species-distribution","dir":"Articles","previous_headings":"2. Distribution of species","what":"2.3. Species distribution","title":"GIFT tutorial","text":"Now focal species harmonized name, can retrieve distribution using GIFT_species_distribution().  Note set aggregation argument TRUE order one floristic status per polygon. See function’s help page details. species listed endemic GIFT polygons. Let’s check places listed native naturalized. Looking different combinations statuses, can distinguish several situations: 13 polygons, status available. species listed native non-naturalized (naturalized status missing) 99+12=111 polygons. naturalized non native 5 polygons.  surprising cases species non-native non-naturalized, happens 2 polygons. particular combination can occur unstable cases species process becoming naturalized. Now know polygons species occurs status, can map distribution using GIFT shapes retrieved earlier GIFT_shapes().  customizing code , can also produce nicer map:  R code produce map interested.","code":"anemone_distr <- GIFT_species_distribution(   genus = \"Anemonoides\", epithet = \"nemorosa\", aggregation = TRUE)  anemone_statuses <- anemone_distr %>%   mutate(native = ifelse(native == 1, \"native\", \"non-native\"),          naturalized = ifelse(naturalized == 1, \"naturalized\",                               \"non-naturalized\"),          endemic_list = ifelse(endemic_list == 1, \"endemic_list\",                                \"non-endemic_list\")) %>%   dplyr::select(entity_ID, native, naturalized, endemic_list)  table(anemone_statuses$endemic_list) ##  ## non-endemic_list  ##               46 table(paste(anemone_statuses$native, anemone_statuses$naturalized,             sep = \"_\")) ##  ##                      NA_NA                  native_NA  ##                          6                         12  ##     native_non-naturalized              non-native_NA  ##                         99                          1  ##     non-native_naturalized non-native_non-naturalized  ##                          4                          2 # We rename the statuses based on the distinct combinations anemone_statuses <- anemone_statuses %>%   mutate(Status = case_when(     native == \"native\" & naturalized == \"non-naturalized\" ~ \"native\",     native == \"native\" & is.na(naturalized) ~ \"native\",     native == \"non-native\" & is.na(naturalized) ~ \"non-native\",     native == \"non-native\" & naturalized == \"naturalized\" ~ \"naturalized\",     native == \"non-native\" & naturalized == \"non-naturalized\" ~ \"non-native\",     is.na(native) & is.na(naturalized) ~ \"unknown\"   ))  # Merge with the shapes anemone_shape <- gift_shapes[which(gift_shapes$entity_ID %in%                                       unique(anemone_distr$entity_ID)), ] anemone_map <- dplyr::left_join(anemone_shape, anemone_statuses,                                 by = \"entity_ID\")  # Area of distribution with floristic status ggplot(world) +   geom_sf(color = \"gray70\") +   geom_sf(data = anemone_map, color = \"black\", aes(fill = as.factor(Status))) +   scale_fill_brewer(\"Status\", palette = \"Set2\") +   labs(title = expression(paste(\"Distribution map of \",                                 italic(\"Anemonoides nemorosa\"))),        subtitle = \"Unprojected (GCS: WGS84)\") +   lims(x = c(-65, 170), y = c(-45, 70)) +   theme_void() anemone_map_plot_bg_parts <-   ggplot(world) +   geom_sf(data = bb, fill = \"aliceblue\", color = NA) +   geom_sf(data = equator, color = \"gray50\", linetype = \"dashed\",           linewidth = 0.1) +   geom_sf(data = world_countries, fill = \"antiquewhite1\", color = NA) +   geom_sf(color = \"gray50\", linewidth = 0.1) +   geom_sf(data = bb, fill = NA) +   geom_sf(data = anemone_map, color = \"black\", aes(fill = as.factor(Status))) +   scale_fill_manual(\"Status\",                     values = c(\"native\" = \"#2c7bb6\",                                \"naturalized\" = \"#d7191c\",                                \"non-native\" = \"#fdae61\",                                \"unknown\" = \"#abd9e9\")) +   labs(title = expression(paste(\"b) Distribution map of \",                                 italic(\"Anemonoides nemorosa\")))) +   theme_void() +   theme(axis.title = element_blank(),         axis.text = element_blank(),         axis.ticks = element_blank())  (anemone_map_plot_bg_parts +     lims(x = c(-69, 61), y = c(37, 70)) + # Europe & Newfoundland     theme(panel.border = element_rect(fill = NA, linewidth = 1)) +     theme(legend.position = \"bottom\")   |     anemone_map_plot_bg_parts +     lims(x = c(165, 178), y = c(-47, -35)) + # New Zealand     labs(title = \"\") +     guides(fill = \"none\") +     theme(panel.border = element_rect(fill = NA, linewidth = 1)))"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"trait-data","dir":"Articles","previous_headings":"","what":"3. Trait data","title":"GIFT tutorial","text":"Trait information species higher taxonomic level also provided GIFT R package.","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"metadata","dir":"Articles","previous_headings":"3. Trait data","what":"3.1. Metadata","title":"GIFT tutorial","text":"many functional traits available GIFT. traits identification number called trait_ID. Since two functions retrieving trait values, GIFT_traits() GIFT_traits_raw(), rely IDs, first step call function GIFT_traits_meta() know ID desired trait .  example, let’s say want retrieve maximum vegetative heights plant species. can see ID trait 1.6.2. Now ID, can use GIFT_traits() retrieve growth form values different plant species.","code":"trait_meta <- GIFT_traits_meta() trait_meta[which(trait_meta$Trait2 == \"Plant_height_max\"), ] ##    Lvl1   Category Lvl2       Trait1  Lvl3           Trait2 Units    type ## 12    1 Morphology  1.6 Plant height 1.6.2 Plant_height_max     m numeric ##    comment count ## 12    <NA> 70367"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"species-level","dir":"Articles","previous_headings":"3. Trait data > 3.2. Trait values","what":"3.2.1. Species level","title":"GIFT tutorial","text":"two functions access trait values. First, GIFT_traits_raw() returns trait values given species given trait. trait values can vary.  Second, GIFT_traits() returns aggregated trait value species level. aggregation simply takes mean continuous traits frequent entry categorical traits. However, specific cases, aggregation takes either minimum maximum, trait chose.  Let’s retrieve raw aggregated values maximum vegetative height plants (trait_ID 1.6.2). three maximum heights Fagus sylvatica, 30, 35, 50 meters, led aggregated value 50 meters.  want look references led aggregated trait value, can run chunk:","code":"height <- GIFT_traits(trait_IDs = c(\"1.6.2\"), agreement = 0.66,                       bias_ref = FALSE, bias_deriv = FALSE)  height_raw <- GIFT_traits_raw(trait_IDs = c(\"1.6.2\"))  # Raw values as.numeric(height_raw[which(height_raw$work_species == \"Fagus sylvatica\"),                       \"trait_value\"])  # Aggregated value as.numeric(height[which(height$work_species == \"Fagus sylvatica\"),                   \"trait_value_1.6.2\"]) references <- GIFT_references(GIFT_version = \"beta\")  unique(unlist(strsplit(height$references_1.6.2, \",\")))  references <- references[   which(references$ref_ID %in%            unique(unlist(strsplit(height$references_1.6.2, \",\")))), ] references[1:2, ]"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"taxonomic-level","dir":"Articles","previous_headings":"3. Trait data > 3.2. Trait values","what":"3.2.2. Taxonomic level","title":"GIFT tutorial","text":"Traits can also retrieved higher taxonomic level, using GIFT_traits_tax().  example, attempt retrieve three traits family level. three traits asked woodiness (trait_ID = \"1.1.1\"), growth form (trait_ID = \"1.2.1\") whether plant climber (trait_ID = \"1.4.1\"). three requested traits, growth form available family level. Therefore, output table contains trait values two traits family level.","code":"trait_tax <- GIFT_traits_tax(trait_IDs = c(\"1.1.1\", \"1.2.1\", \"1.4.1\"),                              bias_ref = FALSE, bias_deriv = FALSE)  trait_tax[1:3, ]"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"trait-coverage","dir":"Articles","previous_headings":"3. Trait data","what":"3.3. Trait coverage","title":"GIFT tutorial","text":"can also retrieve trait coverage information polygons, using function species richness GIFT_coverage().  combination previously loaded shapes, can also map trait coverage.  customizing code , can also produce nicer map:  R code produce map interested.","code":"angio_height <- GIFT_coverage(what = \"trait_coverage\",                               taxon_name = \"Angiospermae\",                               trait_ID = \"1.6.2\")  angio_height_shape <- gift_shapes[which(gift_shapes$entity_ID %in%                                            unique(angio_height$entity_ID)), ]  angio_height_map <- dplyr::left_join(   angio_height_shape, angio_height, by = \"entity_ID\")  angio_height_map <- angio_height_map[complete.cases(angio_height_map$native), ]  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = angio_height_map[complete.cases(angio_height_map$native), ],           aes(fill = native)) +   scale_fill_viridis_c(\"Coverage (%)\") +   labs(title = \"Coverage for maximal vegetative height of Angiosperms\",        subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void() ggplot(world) +   geom_sf(data = bb, fill = \"aliceblue\") +   geom_sf(data = equator, color = \"gray50\", linetype = \"dashed\",           linewidth = 0.1) +   geom_sf(data = world_countries, fill = \"antiquewhite1\", color = NA) +   geom_sf(color = \"gray50\", linewidth = 0.1) +   geom_sf(data = bb, fill = NA) +   geom_sf(data = angio_height_map,           aes(fill = ifelse(angio_height_map$entity_class %in%                               c(\"Island/Mainland\", \"Mainland\",                                 \"Island Group\", \"Island Part\"),                             100*native, NA)), size = 0.1) +   geom_point(data = angio_height_map,              aes(color = ifelse(angio_height_map$entity_class %in%                                   c(\"Island\"),                                 100*native, NA),                  geometry = geometry),              stat = \"sf_coordinates\", size = 1, stroke = 0.5) +   scale_color_gradientn(     \"Coverage (%)\",      colours = rev(RColorBrewer::brewer.pal(9, name = \"PuBuGn\")),     limits = c(0, 100),     na.value = \"transparent\") +   scale_fill_gradientn(     \"Coverage (%)\",      colours = rev(RColorBrewer::brewer.pal(9, name = \"PuBuGn\")),     limits = c(0, 100),     na.value = \"transparent\") +   labs(title = \"Coverage for maximal vegetative height of Angiosperms\",        subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void()"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"environmental-variables","dir":"Articles","previous_headings":"","what":"4. Environmental variables","title":"GIFT tutorial","text":"Finally, set summary statistics many environmental variables can retrieved GIFT polygon.","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"metadata-1","dir":"Articles","previous_headings":"4. Environmental variables","what":"4.1. Metadata","title":"GIFT tutorial","text":"illustrate retrieve environmental variables, summarized polygon level, subset polygons.  retrieve environmental variables polygons falling western Mediterranean basin, retrieved section 1.  know variables available, can run two metadata functions: GIFT_env_meta_misc() GIFT_env_meta_raster(). respectively give access list miscellaneous variables raster layers available GIFT database.  references cite using environmental variables also available functions (column ref_long outputs).","code":"misc_env <- GIFT_env_meta_misc() raster_env <- GIFT_env_meta_raster()"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"environmental-values","dir":"Articles","previous_headings":"4. Environmental variables","what":"4.2. Environmental values","title":"GIFT tutorial","text":"Let’s say want retrieve perimeter biome polygon well elevation mean temperature. two raster layers, need define summary statistics, since polygons usually larger raster resolution.  many summary statistics available, can check help page GIFT_env() see . Let’s get mean median elevation maximal value average temperature. see region El Hierro average altitude 579 meters sea level average annual temperature 21.6 degrees Celsius.","code":"med_env <- GIFT_env(entity_ID = unique(medit[[2]]$entity_ID),                     miscellaneous = c(\"perimeter\", \"biome\"),                     rasterlayer = c(\"mn30_grd\", \"wc2.0_bio_30s_01\"),                     sumstat = list(c(\"mean\", \"med\"), \"max\"))  med_env[1, ]"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"map","dir":"Articles","previous_headings":"4. Environmental variables","what":"4.3. Map","title":"GIFT tutorial","text":"Using previously loaded shapes, can also map specific environmental variable GIFT polygons.  customizing code , can also produce nicer map:  R code produce map interested.","code":"world_temp <- GIFT_env(entity_ID = unique(angio_rich$entity_ID),                        rasterlayer = c(\"wc2.0_bio_30s_01\"),                        sumstat = c(\"mean\"))  temp_shape <- gift_shapes[which(gift_shapes$entity_ID %in%                                    unique(angio_rich$entity_ID)), ]  temp_map <- dplyr::left_join(temp_shape, world_temp, by = \"entity_ID\")  ggplot(world) +   geom_sf(color = \"gray50\") +   geom_sf(data = temp_map, aes(fill = mean_wc2.0_bio_30s_01)) +   scale_fill_viridis_c(\"Celsius degrees\") +   labs(title = \"Average temperature\",        subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void() ggplot(world) +   geom_sf(data = bb, fill = \"aliceblue\") +   geom_sf(data = equator, color = \"gray50\", linetype = \"dashed\",           linewidth = 0.1) +   geom_sf(data = world_countries, fill = \"antiquewhite1\", color = NA) +   geom_sf(color = \"gray50\", linewidth = 0.1) +   geom_sf(data = bb, fill = NA) +   geom_sf(data = temp_map,           aes(fill = ifelse(temp_map$entity_class %in%                               c(\"Island/Mainland\", \"Mainland\",                                 \"Island Group\", \"Island Part\"),                             mean_wc2.0_bio_30s_01, NA)), size = 0.1) +   geom_point(data = temp_map,              aes(color = ifelse(temp_map$entity_class %in%                                   c(\"Island\"),                                 mean_wc2.0_bio_30s_01, NA),                  geometry = geometry),              stat = \"sf_coordinates\", size = 1, stroke = 0.5) +   scale_color_gradientn(     \"°C\",      colours = RColorBrewer::brewer.pal(9, name = \"Reds\"),     limits = c(-20, 30),     na.value = \"transparent\") +   scale_fill_gradientn(     \"°C\",      colours = RColorBrewer::brewer.pal(9, name = \"Reds\"),     limits = c(-20, 30),     na.value = \"transparent\") +   labs(title = \"Average temperature\",        subtitle = \"Projection EckertIV\") +   coord_sf(crs = eckertIV) +   theme_void()"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"phylogeny","dir":"Articles","previous_headings":"","what":"5. Phylogeny","title":"GIFT tutorial","text":"build phylogeny species GIFT database, used U.PhyloMaker R package Jin & Qian (2022). seed plants, selected megatree GBOTB.extended.WP.tre Smith Brown (2018) phylogeny pteridophytes Zanne et al. (2014). next chunk, calculate trait coverage (growth form) genus family level. now prune tree genus level. following plot, one tip per genus. two outer rings illustrate coverage growth form per genus per family (outer ring). family ring, width family set number genera contains.  get following plot, need install/load following packages:","code":"# Retrieving phylogeny, taxonomy and species from GIFT phy <- GIFT_phylogeny(clade = \"Tracheophyta\", GIFT_version = \"beta\") tax <- GIFT_taxonomy(GIFT_version = \"beta\") gift_sp <- GIFT_species(GIFT_version = \"beta\")  gf <- GIFT_traits(trait_IDs = \"1.2.1\", agreement = 0.66, bias_ref = FALSE,                   bias_deriv = FALSE, GIFT_version = \"beta\") # Replacing space with _ for the species names gf$work_species <- gsub(\" \", \"_\", gf$work_species, fixed = TRUE) # Retrieving family of each species sp_fam <- GIFT_taxgroup(work_ID = unique(gift_sp$work_ID),                         taxon_lvl = \"family\", GIFT_version = \"beta\") sp_genus_fam <- data.frame(   work_ID = unique(gift_sp$work_ID),   work_species = unique(gift_sp$work_species),   family = sp_fam) sp_genus_fam <- left_join(sp_genus_fam,                           gift_sp[, c(\"work_ID\", \"work_genus\")],                           by = \"work_ID\") colnames(sp_genus_fam)[colnames(sp_genus_fam) == \"work_genus\"] <- \"genus\"  # Problem with hybrid species on the tip labels of the phylo tree phy$tip.label[substring(phy$tip.label, 1, 2) == \"x_\"] <-   substring(phy$tip.label[substring(phy$tip.label, 1, 2) == \"x_\"],             3,             nchar(phy$tip.label[substring(phy$tip.label, 1, 2) == \"×_\"]))  phy$tip.label[substring(phy$tip.label, 1, 2) == \"×_\"] <-   substring(phy$tip.label[substring(phy$tip.label, 1, 2) == \"×_\"],             3,             nchar(phy$tip.label[substring(phy$tip.label, 1, 2) == \"×_\"])) sp_genus_fam <- left_join(sp_genus_fam,                           gf[, c(\"work_ID\", \"trait_value_1.2.1\")],                           by = \"work_ID\")  genus_gf <- sp_genus_fam %>%   group_by(genus) %>%   mutate(prop_gf = round(100*sum(is.na(trait_value_1.2.1))/n(), 2)) %>%   ungroup() %>%   dplyr::select(-work_ID, -work_species, -family, -trait_value_1.2.1) %>%   distinct(.keep_all = TRUE)  fam_gf <- sp_genus_fam %>%   group_by(family) %>%   mutate(prop_gf = round(100*sum(is.na(trait_value_1.2.1))/n(), 2)) %>%   ungroup() %>%   dplyr::select(-work_ID, -work_species, -genus, -trait_value_1.2.1) %>%   distinct(.keep_all = TRUE)  sp_genus_fam$species <- gsub(\"([[:punct:]])|\\\\s+\", \"_\",                              sp_genus_fam$work_species)  # Keeping one species per genus only one_sp_per_gen <- data.frame() for(i in 1:n_distinct(sp_genus_fam$genus)){ # loop over genera   # Focal genus   focal_gen <- unique(sp_genus_fam$genus)[i]   # All species in that genus   gen_sp_i <- sp_genus_fam[which(sp_genus_fam$genus == focal_gen),                            \"species\"]   # Species from the genus available in the phylogeny   gen_sp_i <- gen_sp_i[gen_sp_i %in% phy$tip.label]   # Taking the first one (if at least one is available)   gen_sp_i <- gen_sp_i[1]      one_sp_per_gen <- rbind(one_sp_per_gen,                           data.frame(species = gen_sp_i,                                      genus = focal_gen)) }  # Adding the trait coverage per genus one_sp_per_gen <- left_join(one_sp_per_gen, genus_gf, by = \"genus\")  # Adding the trait coverage per family one_sp_per_gen <- left_join(one_sp_per_gen,                             sp_genus_fam[!duplicated(sp_genus_fam$genus),                                          c(\"genus\", \"family\")],                             by = \"genus\") colnames(one_sp_per_gen)[colnames(one_sp_per_gen) == \"prop_gf\"] <-   \"prop_gf_gen\" one_sp_per_gen <- left_join(one_sp_per_gen, fam_gf, by = \"family\") colnames(one_sp_per_gen)[colnames(one_sp_per_gen) == \"prop_gf\"] <-   \"prop_gf_fam\" phy_gen <- ape::keep.tip(   phy = phy,   tip = one_sp_per_gen[complete.cases(one_sp_per_gen$species), \"species\"]) library(\"BiocManager\") install(\"ggtree\") library(\"ggtree\") library(\"tidytree\") install(\"ggtreeExtra\") library(\"ggtreeExtra\") ggtree(phy_gen, color = \"grey70\", layout = \"circular\") %<+% one_sp_per_gen +   geom_fruit(geom = geom_tile,              mapping = aes(fill = prop_gf_gen),              width = 50,              offset = 0.1) +   geom_fruit(geom = geom_tile,              mapping = aes(color = prop_gf_fam, fill = prop_gf_fam),              width = 50,              offset = 0.1,              show.legend = FALSE) +   scale_color_viridis_c() +   scale_fill_viridis_c(\"Growth form availability per genus (%)\") +   theme(legend.position = \"bottom\")"},{"path":"https://biogeomacro.github.io/GIFT/articles/GIFT.html","id":"references","dir":"Articles","previous_headings":"","what":"6. References","title":"GIFT tutorial","text":"using GIFT database GIFT R package, two resources cite: Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—R package access Global Inventory Floras Traits. Methods Ecology Evolution, 00, 1–11. https://doi.org/10.1111/2041-210X.14213. Weigelt, P., König, C. & Kreft, H. (2020) GIFT – Global Inventory Floras Traits macroecology biogeography. Journal Biogeography, https://doi.org/10.1111/jbi.13623.","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_API.html","id":"api","dir":"Articles > Web_only","previous_headings":"","what":"API","title":"Queries in the API","text":"API endpoint https://gift.uni-goettingen.de/api/extended/index.php. several queries, listed table , allow retrieving distinct tables. name Query column table used query argument. example, query leads environmental raster metadata table: https://gift.uni-goettingen.de/api/extended/index.php?query=env_raster Note endpoint changes depending version GIFT querying. example, table , can retrieve table GIFT version 2.0: https://gift.uni-goettingen.de/api/extended/index2.0.php?query=env_raster API require authentication, password-protected API leading restricted content different tables. Restricted content can ,example, checklists need approval provider used. API can communicated upon request. list 24 available queries, arguments GIFT R functions called. rate-limitation queries except species phylogeny, retrieves data chunks. details:","code":"# Query for trait and chunks # Default value for end is 10000 # https://gift.uni-goettingen.de/api/extended/index.php?query=traits& # traitid=1.1.1&biasref=1&biasderiv=1&startat=100000&limit=10  # To retrieve the geojson paste0(\"https://gift.uni-goettingen.de/geojson/geojson_smaller\",         ifelse(GIFT_version == \"beta\", \"\", GIFT_version), \"/\",        entity_ID[i], \".geojson\")"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_API.html","id":"dependency-graph-of-r-functions","dir":"Articles > Web_only","previous_headings":"","what":"Dependency graph of R functions","title":"Queries in the API","text":"Arrows figure connect interdependent functions, .e. functions call functions. Function names colored according larger category belong.","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_API.html","id":"references","dir":"Articles > Web_only","previous_headings":"","what":"References","title":"Queries in the API","text":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—R package access Global Inventory Floras Traits. Methods Ecology Evolution, 00, 1–11. https://doi.org/10.1111/2041-210X.14213. Weigelt, P., König, C. & Kreft, H. (2020) GIFT – Global Inventory Floras Traits macroecology biogeography. Journal Biogeography, https://doi.org/10.1111/jbi.13623.","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"section1","dir":"Articles > Web_only","previous_headings":"","what":"1. Versions and metadata for checklists","title":"GIFT tutorial for advanced users","text":"functions package version argument. argument allows retrieve different instances GIFT database thus make previous studies using GIFT database reproducible. example, version used Weigelt et al. (2020) \"1.0\". get information contents different versions, can go click Version Log tab. access available versions database, can run following function: version column table one use want retrieve past versions GIFT database. default, argument used GIFT_version = \"latest\" leads current latest stable version database (“2.0” October 2022). GIFT_lists() function can run retrieve metadata GIFT checklists. next chunk, call different values GIFT_version argument. number available checklists 3122 version 1.0 equals 4475 version 2.0.","code":"versions <- GIFT_versions() kable(versions, \"html\") %>%   kable_styling(full_width = FALSE) list_latest <- GIFT_lists(GIFT_version = \"latest\") # default value list_1 <- GIFT_lists(GIFT_version = \"1.0\")"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"references","dir":"Articles > Web_only","previous_headings":"","what":"2. References","title":"GIFT tutorial for advanced users","text":"using GIFT database research article, good practice cite references used, list Appendix. following function retrieves reference checklist, well metadata. References documented ref_long column.  next chunk describes steps retrieve publication sources start specific regions, let’s say Canary islands.","code":"ref <- GIFT_references() ref <- ref[which(ref$ref_ID %in% c(22, 10333, 10649)),            c(\"ref_ID\", \"ref_long\", \"geo_entity_ref\")]  # 3 first rows of that table kable(ref, \"html\") %>%   kable_styling(full_width = FALSE) # List of all regions regions <- GIFT_regions()  # Example can <- 1036 # entity ID for Canary islands  # What references gift_lists <- GIFT_lists()  can_ref <- gift_lists[which(gift_lists$entity_ID %in% c(can)), \"ref_ID\"]  # What sources kable(ref[which(ref$ref_ID %in% can_ref), ], \"html\") %>%   kable_styling(full_width = TRUE)"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"checklist-data","dir":"Articles > Web_only","previous_headings":"","what":"3. Checklist data","title":"GIFT tutorial for advanced users","text":"main wrapper function retrieving checklists species composition GIFT_checklists() can also retrieve individual checklists using GIFT_checklists_raw(). need know identification number list_ID checklists want retrieve.  quickly see list_ID available database, can run GIFT_lists() shown Section 1. calling GIFT_checklists_raw(), can set argument namesmatched TRUE order get additional columns informing taxonomic harmonization performed list uploaded GIFT database. list called , can see “lost” species taxonomic harmonization since went 1331 source 1106 taxonomic harmonization. means several species considered synonyms unknown plant species taxonomic backbone used harmonization. Note: main service used taxonomic harmonization species names Plant List version 2.0 World checklist Vascular Plants afterwards.","code":"listID_1 <- GIFT_checklists_raw(list_ID = c(11926)) listID_1_tax <- GIFT_checklists_raw(list_ID = c(11926), namesmatched = TRUE)  ncol(listID_1) # 16 columns ncol(listID_1_tax) # 33 columns length(unique(listID_1$work_ID)); length(unique(listID_1_tax$orig_ID))"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"spatial-subset","dir":"Articles > Web_only","previous_headings":"","what":"4. Spatial subset","title":"GIFT tutorial for advanced users","text":"main vignette, illustrated retrieve checklists fall provided shapefile, using western Mediterranean basin provided GIFT R package. provide details different values overlap argument can take, using GIFT_spatial() function. following figure illustrates argument works: Figure 1. GIFT spatial  now illustrate retrieving checklists falling western Mediterranean basin using four options available. see progressively lose lists apply selective criterion spatial overlap. restrictive option overlap = \"shape_inside\" 72 regions, overlap = \"centroid_inside\" 84 regions, overlap = \"shape_intersect\" 104 regions finally less restrictive one overlap = \"extent_intersect\" 108 regions.  Using functions GIFT_shapes() calling entity_IDs retrieved instance, can download shape files region. make map.","code":"data(\"western_mediterranean\") med_centroid_inside  <- GIFT_spatial(shp = western_mediterranean,                                      overlap = \"centroid_inside\") med_extent_intersect <- GIFT_spatial(shp = western_mediterranean,                                      overlap = \"extent_intersect\") med_shape_intersect <- GIFT_spatial(shp = western_mediterranean,                                     overlap = \"shape_intersect\") med_shape_inside <- GIFT_spatial(shp = western_mediterranean,                                  overlap = \"shape_inside\") length(unique(med_extent_intersect$entity_ID)) length(unique(med_shape_intersect$entity_ID)) length(unique(med_centroid_inside$entity_ID)) length(unique(med_shape_inside$entity_ID)) geodata_extent_intersect <- GIFT_shapes(med_extent_intersect$entity_ID)  geodata_shape_inside <-   geodata_extent_intersect[which(geodata_extent_intersect$entity_ID %in%                                    med_shape_inside$entity_ID), ] geodata_centroid_inside <-   geodata_extent_intersect[which(geodata_extent_intersect$entity_ID %in%                                    med_centroid_inside$entity_ID), ] geodata_shape_intersect <-   geodata_extent_intersect[which(geodata_extent_intersect$entity_ID %in%                                    med_shape_intersect$entity_ID), ] par_overlap <- par(mfrow = c(2, 2), mai = c(0, 0, 0.5, 0)) plot(sf::st_geometry(geodata_shape_inside),      col = geodata_shape_inside$entity_ID,      main = paste(\"shape inside\\n\",                   length(unique(med_shape_inside$entity_ID)),                   \"polygons\")) plot(sf::st_geometry(western_mediterranean), lwd = 2, add = TRUE)  plot(sf::st_geometry(geodata_centroid_inside),      col = geodata_centroid_inside$entity_ID,      main = paste(\"centroid inside\\n\",                   length(unique(med_centroid_inside$entity_ID)),                   \"polygons\")) points(geodata_centroid_inside$point_x, geodata_centroid_inside$point_y) plot(sf::st_geometry(western_mediterranean), lwd = 2, add = TRUE)  plot(sf::st_geometry(geodata_shape_intersect),      col = geodata_shape_intersect$entity_ID,      main = paste(\"shape intersect\\n\",                   length(unique(med_shape_intersect$entity_ID)),                   \"polygons\")) plot(sf::st_geometry(western_mediterranean), lwd = 2, add = TRUE)  plot(sf::st_geometry(geodata_extent_intersect),      col = geodata_extent_intersect$entity_ID,      main = paste(\"extent intersect\\n\",                   length(unique(med_extent_intersect$entity_ID)),                   \"polygons\")) plot(sf::st_geometry(western_mediterranean), lwd = 2, add = TRUE) par(par_overlap)"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"remove-overlapping-regions","dir":"Articles > Web_only","previous_headings":"","what":"5. Remove overlapping regions","title":"GIFT tutorial for advanced users","text":"GIFT comprises many polygons regions, several polygons overlapping. remove overlapping polygons associated parameters two things detailed main vignette. provide details:","code":"length(med_shape_inside$entity_ID) ## [1] 72 length(GIFT_no_overlap(med_shape_inside$entity_ID, area_threshold_island = 0,                        area_threshold_mainland = 100, overlap_threshold = 0.1)) ## [1] 53 # The following polygons are overlapping: GIFT_no_overlap(med_shape_inside$entity_ID, area_threshold_island = 0,                 area_threshold_mainland = 100, overlap_threshold = 0.1) ##  [1]   145   146   147   148   149   150   151   414   415   416   417   547 ## [13]   548   549   550   551   552   586   591   592   736   738   739 10001 ## [25] 10072 10104 10184 10303 10422 10430 10978 11029 11030 11031 11033 11035 ## [37] 11038 11039 11042 11044 11045 11046 11434 11474 11477 11503 12231 12232 ## [49] 12233 12632 12633 12634 12635 # Example of two overlapping polygons: Spain mainland and Andalusia overlap_shape <- GIFT_shapes(entity_ID = c(10071, 12078)) par_overlap_shp <- par(mfrow = c(1, 1)) plot(sf::st_geometry(overlap_shape),      col = c(rgb(red = 1, green = 0, blue = 0, alpha = 0.5),              rgb(red = 0, green = 0, blue = 1, alpha = 0.3)),      lwd = c(2, 1),      main = \"Overlapping polygons\") par(par_overlap_shp)  GIFT_no_overlap(c(10071, 12078), area_threshold_island = 0,                 area_threshold_mainland = 100, overlap_threshold = 0.1) ## [1] 12078 GIFT_no_overlap(c(10071, 12078), area_threshold_island = 0,                 area_threshold_mainland = 100000, overlap_threshold = 0.1) ## [1] 10071"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"by-ref_id","dir":"Articles > Web_only","previous_headings":"5. Remove overlapping regions","what":"5.2. By ref_ID","title":"GIFT tutorial for advanced users","text":"GIFT_checklists(), also possibility remove overlapping polygons belong reference (.e. ref_ID). show works following example: Asking checklists vascular plants, get 369 checklists without overlapping criterion, 336 remove overlapping polygons 364 remove overlapping polygons reference level. difference second third case? Let’s look checklists present second example third. 28 references second example (overlapping regions removed reference level) third (overlapping regions removed). look one listed references ref_ID = 10143, see checklist Pilbara region Australia. entity_ID 10043. Looking GIFT web site, see regions can overlap .  Since polygons belong ref_ID, kept by_ref_ID = TRUE removed by_ref_ID = FALSE.","code":"ex <- GIFT_checklists(taxon_name = \"Tracheophyta\", by_ref_ID = FALSE,                       list_set_only = TRUE, GIFT_version = \"3.0\") ex2 <- GIFT_checklists(taxon_name = \"Tracheophyta\",                        remove_overlap = TRUE, by_ref_ID = TRUE,                        list_set_only = TRUE, GIFT_version = \"3.0\") ex3 <- GIFT_checklists(taxon_name = \"Tracheophyta\",                        remove_overlap = TRUE, by_ref_ID = FALSE,                        list_set_only = TRUE, GIFT_version = \"3.0\")  length(unique(ex$lists$ref_ID)) # 369 checklists length(unique(ex2$lists$ref_ID)) # 364 checklists length(unique(ex3$lists$ref_ID)) # 336 checklists unique(ex2$lists$ref_ID)[!(unique(ex2$lists$ref_ID) %in%                              unique(ex3$lists$ref_ID))] # 28 references # Pilbara region Australy and overlapping shapes pilbara <- GIFT_shapes(entity_ID = c(10043, 12172, 11398, 11391, 10918)) ggplot(pilbara) +   geom_sf(aes(fill = as.factor(entity_ID)), alpha = 0.5) +   scale_fill_brewer(\"entity_ID\", palette = \"Set1\")"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"species","dir":"Articles > Web_only","previous_headings":"","what":"6. Species","title":"GIFT tutorial for advanced users","text":"plant species present GIFT database can retrieved using GIFT_species(). add additional information, like order family, can call GIFT_taxgroup(). Order higher levels can also retrieved.  mentioned , plant species names may vary original sources come final work_species name get, due taxonomic harmonization procedure. Looking species different steps taxonomic harmonization possible GIFT_species_lookup() function. table, can see first entry Fagus silvatica later changed accepted name Fagus sylvatica.","code":"species <- GIFT_species() # Add Family species$Family <- GIFT_taxgroup(   as.numeric(species$work_ID), taxon_lvl = \"family\", return_ID = FALSE,    species = species) GIFT_taxgroup(as.numeric(species$work_ID[1:5]), taxon_lvl = \"order\",               return_ID = FALSE) GIFT_taxgroup(as.numeric(species$work_ID[1:5]),               taxon_lvl = \"higher_lvl\", return_ID = FALSE,               species = species) Fagus <- GIFT_species_lookup(genus = \"Fagus\", epithet = \"sylvatica\",                              namesmatched = TRUE)"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"retrieve-work_ids-for-external-species-list","dir":"Articles > Web_only","previous_headings":"6. Species","what":"6.2. Retrieve work_IDs for external species list","title":"GIFT tutorial for advanced users","text":"","code":"sp_list <- c(\"Anemone nemorosa\", \"Fagus sylvatica\")  gift_sp <- GIFT_species()  sapply(sp_list, function(x) grep(x, gift_sp$work_species)) gift_sp[sapply(sp_list, function(x) grep(x, gift_sp$work_species)), ]  # With fuzzy matching # library(\"fuzzyjoin\") # library(\"dplyr\") sp_list <- data.frame(work_species = c(\"Anemona nemorosa\", \"Fagus sylvaticaaa\"))  fuzz <- stringdist_join(sp_list, gift_sp,                         by = \"work_species\",                         mode = \"left\",                         ignore_case = FALSE,                          method = \"jw\",                          max_dist = 99,                          distance_col = \"dist\")   fuzz %>%   group_by(work_species.x) %>%   slice_min(order_by = dist, n = 1)"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"taxonomy","dir":"Articles > Web_only","previous_headings":"","what":"7. Taxonomy","title":"GIFT tutorial for advanced users","text":"taxonomy used GIFT database can downloaded using GIFT_taxonomy().","code":"taxo <- GIFT_taxonomy()"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"overlap_glonaf-tables-and-others","dir":"Articles > Web_only","previous_headings":"","what":"8. Overlap_GloNAF tables (and others)","title":"GIFT tutorial for advanced users","text":"Since global databases plant diversity exist may based different polygons, provide function GIFT_overlap() can look spatial overlap GIFT polygons polygons coming databases.  far, two resources available: glonaf gmba. glonaf stands Global Naturalized Alien Flora gmba Global Mountain Biodiversity Assessment. GIFT_overlap() returns spatial overlap percent pairwise combination polygons GIFT resource. Let’s illustrate GMBA shapefile. see two overlap columns returned: overlap12 overlap21. first column returns overlap GIFT region resource. second column returns overlap resource GIFT region. example, look polygon 11861 GIFT: corresponding region Aisen province Chile overlaps 95% GMBA polygon number 731. time GMBA polygon 731 overlaps 13% Aisen province Chile. corresponding mountain region larger GIFT region encompasses can see plot (dark polygon GIFT region):","code":"gmba_overlap <- GIFT_overlap(resource = \"gmba\")  kable(gmba_overlap[1:5, ], \"html\") %>%   kable_styling(full_width = FALSE) gmba_overlap[which(gmba_overlap$entity_ID == 11861 &                      gmba_overlap$gmba_ID == 731), ] ## [1] entity_ID gmba_ID   overlap12 overlap21 ## <0 rows> (or 0-length row.names)"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"plotting-phylogeny-for-a-specific-region","dir":"Articles > Web_only","previous_headings":"","what":"9. Plotting phylogeny for a specific region","title":"GIFT tutorial for advanced users","text":"want plot phylogenetic tree native plant species occurring Tenerife island.","code":"# List table gift_list <- GIFT_lists() # Tenerife data for the following list_IDs: 150, 14110, 14228  # Retrieve the lists tenerife <- GIFT_checklists_raw(list_ID = c(150, 14110, 14228))  # Extract unique native species only tenerife_sp <- tenerife[which(tenerife$native == 1), ] %>%    dplyr::select(work_species) %>%    distinct(.keep_all = TRUE)  # Harmonizing species names between the species table and the phylogeny tenerife_sp$work_species <- gsub(\" \", \"_\", tenerife_sp$work_species,                                  fixed = TRUE)  # Phylogeny phy <- GIFT_phylogeny()  # Dropping tips tenerife_phy <- ape::keep.tip(   phy,   tip = phy$tip.label[(phy$tip.label %in% tenerife_sp$work_species)])   plot(tenerife_phy, type = \"fan\", cex = 0.2)"},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/GIFT_advanced_users.html","id":"references-1","dir":"Articles > Web_only","previous_headings":"","what":"References","title":"GIFT tutorial for advanced users","text":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—R package access Global Inventory Floras Traits. Methods Ecology Evolution, 00, 1–11. https://doi.org/10.1111/2041-210X.14213. Weigelt, P., König, C. & Kreft, H. (2020) GIFT – Global Inventory Floras Traits macroecology biogeography. Journal Biogeography, https://doi.org/10.1111/jbi.13623.","code":""},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/Publication_records.html","id":"section","dir":"Articles > Web_only","previous_headings":"Peer-reviewed research articles","what":"2025","title":"Publication records","text":"16. Quan, Y., Hederström, V., Ekroos, J., Menubarbe, P., Krausl, T., & Clough, Y. (2025) Landscape composition influences invertebrate herbivory flowering forbs semi-natural grasslands. Basic Applied Ecology.https://doi.org/10.1016/j.baae.2025.03.006 15. Guerrero, P., Contador, T., Díaz, ., Escobar, C., Orlando, J., Marín, C., & Medina, P. (2025) Southern Islands Vascular Flora (SIVFLORA) dataset: global plant database Southern Ocean islands. Scientific Data.https://doi.org/10.1038/s41597-025-04702-9 14. Wunderlich, R.F., Jamoneau, ., Boutry, S., Hosni, M., & Bertrin, V.. (2025) Model-based management macrophytes shallow lakes warming. Journal Environmental Management.https://doi.org/10.1016/j.jenvman.2025.124543 13. Dugerdil, L., Peyron, O., Violle, C., Joannin, S., Ménot, G., Denelle, P., Bruelheide, H., Chytrý, M., Field, R., Hatim, M. Z., Gholizadeh, H., Dolezal, J., Pillar, V. D., Shaltout, K. H., Schrodt, F., & Garnier, E. (2025) Functional Signatures Surface Pollen Vegetation Broadly Similar: Good News Past Reconstructions Vegetation. Journal Biogeography.https://doi.org/10.1111/jbi.15100 12. Frisk, C., & Hanslin, M. (2025) Optimizing plant species composition green roofs ecological functionality biodiversity conservation. Urban Ecosystems.https://doi.org/10.1007/s11252-024-01657-4","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/Publication_records.html","id":"section-1","dir":"Articles > Web_only","previous_headings":"Peer-reviewed research articles","what":"2024","title":"Publication records","text":"11. Cai, L., Kreft, H., Denelle, H., Taylor, ., Craven, D., Dawson, W., Essl, F., van Kleunen, M., Pergl, J., Pyšek, P., Winter, M., Cabezas, F., Wagner, V., Pelser, P., Wieringa, J. & Weigelt, P. (2024) Environmental filtering, dispersal history, explains global patterns phylogenetic turnover seed plants deep evolutionary timescales. Nature Ecology Evolution.https://doi.org/10.1038/s41559-024-02599-y 10. Barrasso, C., Krüger, R., Eltner, ., Cord, . (2024) Mapping indicator species segetal flora result-based payments arable land using UAV imagery deep learning. Ecological Indicators.https://doi.org/10.1016/j.ecolind.2024.112780 9. Schrader, J., Weigelt, P., Cai, L., Westoby, M., Fernández-Palacios, J.-M., Cabezas, F., Plunkett, G., Ranker, T., Triantis, K., Trigas, P., Kubota, Y. & Kreft, H. (2024) Islands key protecting world’s plant endemism. Nature.https://doi.org/10.1038/s41586-024-08036-1  8. Aros-Mualin, D. Kessler, M. Untangling poikilohydry desiccation tolerance: evolutionary macroecological drivers ferns. Annals Botany mcae167.https://doi.org/10.1093/aob/mcae167  7. Chumová, Z., Havlíčková, E., Zeisek, V., Šemberová, K., Mandáková, T., Euston-Brown, D. Trávníček, P. (2024), Deciphering Pteronia’s evolution Cape Floristic Region: comprehensive study disputes polyploid deficiency affirms diploid radiation. Plant J, 119: 2236-2254.https://doi.org/10.1111/tpj.16914  6. Avery L. Russell, Stephen L. Buchmann, John S. Ascher, Zhiheng Wang, Ricardo Kriebel, Diana D. Jolles, Michael C. Orr, Alice C. Hughes, Global patterns drivers buzzing bees poricidal plants, Current Biology, Volume 34, Issue 14, 2024, Pages 3055-3063.e5, ISSN 0960-9822https://doi.org/10.1016/j.cub.2024.05.065  5. Delavaux, C.S., Crowther, T.W., Bever, J.D., Weigelt, P., & Gora, E. Mutualisms weaken latitudinal diversity gradient among oceanic islands. Nature 627, 335–339 (2024).https://doi.org/10.1038/s41586-024-07110-y 4. Roeble, L., van Benthem, K.J., Weigelt, P., Kreft, H., Knope, M., Mandel, J., Vargas, P., Etienne, R., & Valente, L. Island biogeography megadiverse plant family Asteraceae. Nat Commun 15, 7276 (2024).https://doi.org/10.1038/s41467-024-51556-7  3. Fan, Sy., Yang, Q., Li, Sp., Fristoe, T., Cadotte, M.W., Essl, F., Kreft, H., Pergl, J., Pyšek, P., Weigelt, P., Kartesz, J., Nishino, M., Wieringa, J., & van Kleunen, M. latitudinal gradient Darwin’s naturalization conundrum global scale flowering plants. Nat Commun 14, 6244 (2023).https://doi.org/10.1038/s41467-023-41607-w  2. Eva Benavides Rios, Jonathan Sadler, Laura Graham, Thomas J. Matthews, Species distribution models island biogeography: Challenges prospects, Global Ecology Conservation, Volume 51, (2024), e02943, ISSN 2351-9894https://doi.org/10.1016/j.gecco.2024.e02943 ## 2023 1. Cai, Lirong, Holger Kreft, Amanda Taylor, Julian Schrader, Wayne Dawson, Franz Essl, Mark van Kleunen, Jan Pergl, Petr Pyšek, Marten Winter. “Climatic Stability Geological History Shape Global Centers Neo-Paleoendemism Seed Plants.” Proceedings National Academy Sciences 120, . 30 (2023): e2300981120.https://doi.org/10.1073/pnas.2300981120","code":""},{"path":"https://biogeomacro.github.io/GIFT/articles/web_only/Publication_records.html","id":"preprint","dir":"Articles > Web_only","previous_headings":"","what":"Preprint","title":"Publication records","text":"1. Domazetoski, V., Kreft, H., Bestova, H., Wieder, P., Koynov, R., Zarei, ., & Weigelt, P. (2024) Using natural language processing extract plant functional traits unstructured text. BioRXivhttps://doi.org/10.1101/2023.11.06.565787","code":""},{"path":"https://biogeomacro.github.io/GIFT/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pierre Denelle. Author, maintainer. Patrick Weigelt. Author.","code":""},{"path":"https://biogeomacro.github.io/GIFT/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Denelle P, Weigelt P (2025). GIFT: Access Global Inventory Floras Traits (GIFT). R package version 1.3.3, https://biogeomacro.github.io/GIFT/, https://github.com/BioGeoMacro/GIFT.","code":"@Manual{,   title = {GIFT: Access to the Global Inventory of Floras and Traits (GIFT)},   author = {Pierre Denelle and Patrick Weigelt},   year = {2025},   note = {R package version 1.3.3,     https://biogeomacro.github.io/GIFT/},   url = {https://github.com/BioGeoMacro/GIFT}, }"},{"path":"https://biogeomacro.github.io/GIFT/index.html","id":"gift-","dir":"","previous_headings":"","what":"Access to the Global Inventory of Floras and Traits (GIFT)","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"R package includes several functions extracting data Global Inventory Floras Traits (GIFT) database. GIFT global database plant checklists, covering several taxonomic groups providing information floristic status functional traits plants well environmental information checklist.  details contents database can found publications Weigelt et al., (2020) Denelle et al., (2023).","code":""},{"path":"https://biogeomacro.github.io/GIFT/index.html","id":"arrow_double_down-installation","dir":"","previous_headings":"","what":"⏬ Installation","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"package available CRAN, can install load using following commands: GIFT still active development. can install development version GitHub repository using following commands:","code":"install.packages(\"GIFT\") library(\"GIFT\") # install.packages(\"devtools\") remotes::install_github(\"https://github.com/BioGeoMacro/GIFT\", dependencies = TRUE) library(\"GIFT\")"},{"path":"https://biogeomacro.github.io/GIFT/index.html","id":"scroll-vignettes","dir":"","previous_headings":"","what":"📜 Vignettes","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"written several vignettes help use GIFT R package. Three vignettes available: Main tutorial advanced users API Alternatively, prefer view vignettes R, can install package build_vignettes = TRUE.","code":"remotes::install_github(\"https://github.com/BioGeoMacro/GIFT\",                          dependencies = TRUE, upgrade = \"ask\",                          build_vignettes = TRUE)  vignette(\"GIFT\")"},{"path":"https://biogeomacro.github.io/GIFT/index.html","id":"desktop_computer-functions","dir":"","previous_headings":"","what":"🖥️ Functions","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"overview functions data given .","code":""},{"path":"https://biogeomacro.github.io/GIFT/index.html","id":"bug-find-a-bug","dir":"","previous_headings":"","what":"🐛 Find a bug?","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"Thank finding . Head GitHub Issues tab let us know . Alternatively, can also send us email. try get soon possible!","code":""},{"path":"https://biogeomacro.github.io/GIFT/index.html","id":"references-and-dependencies","dir":"","previous_headings":"","what":"References and dependencies","title":"Access to the Global Inventory of Floras and Traits (GIFT)","text":"GIFT depends ape, dplyr, jsonlite, phytools, purrr, sf, stats, tidyr utils. Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—R package access Global Inventory Floras Traits. Methods Ecology Evolution, 14, 2738-2748. https://doi.org/10.1111/2041-210X.14213. Weigelt, P., König, C. & Kreft, H. (2020) GIFT – Global Inventory Floras Traits macroecology biogeography. Journal Biogeography, https://doi.org/10.1111/jbi.13623.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT checklists — GIFT_checklists","title":"GIFT checklists — GIFT_checklists","text":"Retrieve GIFT checklists fulfill specific criteria.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT checklists — GIFT_checklists","text":"","code":"GIFT_checklists(   taxon_name = \"Tracheophyta\",   complete_taxon = TRUE,   floristic_group = c(\"all\", \"native\", \"endemic\", \"naturalized\")[2],   complete_floristic = TRUE,   geo_type = c(\"All\", \"Mainland\", \"Island\")[1],   ref_excluded = NULL,   suit_geo = FALSE,   shp = NULL,   coordinates = NULL,   overlap = \"centroid_inside\",   remove_overlap = FALSE,   area_threshold_island = 0,   area_threshold_mainland = 100,   overlap_threshold = 0.1,   by_ref_ID = FALSE,   taxonomic_group = TRUE,   namesmatched = FALSE,   list_set_only = FALSE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT checklists — GIFT_checklists","text":"taxon_name Character string corresponding taxonomic group interest. complete_taxon logical stating want retrieve checklists contain exhaustive list taxon_name argument well incomplete lists. floristic_group Character among following options: , native, endemic, naturalized. complete_floristic logical stating want retrieve checklists contain exhaustive list floristic_group argument well incomplete lists. geo_type Character string, either Mainland, Island . Island gets Island, Island Group & Island Part. Mainland gets Mainland & Island/Mainland. gets types. ref_excluded vector listing potential ref_IDs shall ignored assembling set regions checklists fulfilling given criteria. Checklists references returned. NULL default. suit_geo logical indicating whether regions classified suit_geo considered (see details). shp Shapefile provided user. coordinates Custom set coordinates. format two columns data.frame, first one longitudes second latitudes vertices polygon. data.frame includes two rows, function assumes values four limits (min max. longitude latitude) bounding box. overlap character string defining criteria use order retrieve checklists. Available options centroid_inside, extent_intersect, shape_intersect shape_inside. example, extent_intersect means every polygon GIFT extent intersects provided shape/coordinates retrieved. remove_overlap logical stating whether want retrieve checklists overlap . area_threshold_island number stating surface smallest overlapping polygon kept. default set 0 square kilometer (meaning default smallest islands conserved). area_threshold_mainland two polygons overlap, smallest biggest one can kept. surface smallest polygon exceeds number, smallest polygon kept. Otherwise, keep bigger one. Set default 100 square-kilometers. overlap_threshold number ranging 0 1, indicating percentage overlap, partially overlapping polygons kept. by_ref_ID logical indicating whether removal overlapping regions shall applied ref_ID . Note regions overlapping regions resource removed even references available regions. taxonomic_group logical. set TRUE, two additional columns (family tax_group) available checklists. namesmatched logical. FALSE default, set TRUE want original species name came references well details taxonomic harmonization. list_set_only logical stating whether want metadata also want retrieve species lists. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT checklists — GIFT_checklists","text":"List two data frames: checklist species list ID.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT checklists — GIFT_checklists","text":"detail data.frame columns: ref_ID - Identification number reference.type- type source .subset- information regarding status species available.native_indicated- Whether native status species available source.natural_indicated - Whether naturalized status species available source.end_ref - Whether endemism information available source.restricted - Whether access reference restricted.taxon_ID- Identification number species.list_ID - Identification number list.end_list - Whether endemism information available list.entity_ID- Identification number polygon list.geo_entity - Name location.suit_geo - polygon suitable.entity_class - Type polygon.entity_type - Name location.taxon_name - Name group taxa available. second data frame species, column refers : ref_ID - Identification number reference.list_ID - Identification number listwork_ID - Identification number species name, taxonomic harmonization.genus_ID - Identification number genus, taxonomic harmonization.species - Species name, taxonomic harmonization.questionable - Whether species occurrence questionable.native - Whether species native.quest_native - Whether native information questionable.naturalized - Whether species naturalized.endemic_ref - Whether species endemic within reference.quest_end_ref - Whether endemic_ref information questionable.endemic_list - Whether species endemic within list.quest_end_list - Whether endemic_list information questionable.cons_status - Conservation status species.family - Family species.tax_group - Taxonomic group species. arguments taxon_name combination complete_taxon = TRUE floristic_group combination complete_floristic = TRUE make sure get back checklists regions GIFT lists aiming covering entire taxonomic group floristic subset (example native vascular plants), mean checklists complete (include species). therefore flagged regions GIFT combination checklists obviously incomplete suit_geo = 0. however done native angiosperms assessment subjective. Set suit_geo = TRUE want consider regions classified suit_geo.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT checklists — GIFT_checklists","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT checklists — GIFT_checklists","text":"","code":"# \\donttest{ data(\"western_mediterranean\") ex <- GIFT_checklists(shp = western_mediterranean, overlap = \"centroid_inside\", taxon_name = \"Angiospermae\", list_set_only = TRUE) # set to FALSE to get species composition #> You are asking for the latest stable version of GIFT which is 3.2. #>  #> Metadata for lists retrieved. #> GIFT taxonomy downloaded. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT checklists meta data — GIFT_checklists_conditional","title":"GIFT checklists meta data — GIFT_checklists_conditional","text":"Retrieve meta data GIFT checklists regions covered checklists jointly fulfilling specific criteria.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT checklists meta data — GIFT_checklists_conditional","text":"","code":"GIFT_checklists_conditional(   taxon_name = \"Tracheophyta\",   floristic_scope = c(\"all\", \"native\", \"native and naturalized\",     \"native and historically introduced\", \"endangered\", \"endemic\", \"naturalized\",     \"other subset\")[1:4],   ref_excluded = NULL,   type_ref = c(\"Account\", \"Catalogue\", \"Checklist\", \"Flora\", \"Herbarium collection\",     \"Key\", \"Red list\", \"Report\", \"Species Database\", \"Survey\"),   entity_class = c(\"Island\", \"Island/Mainland\", \"Mainland\", \"Island Group\",     \"Island Part\"),   native_indicated = FALSE,   natural_indicated = FALSE,   end_ref = FALSE,   end_list = FALSE,   suit_geo = FALSE,   complete_taxon = TRUE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\",   list_set = NULL,   taxonomy = NULL )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT checklists meta data — GIFT_checklists_conditional","text":"taxon_name Character string corresponding taxonomic group interest. floristic_scope vector listing floristic scopes references considered. Options : , native, native naturalized, native historically introduced, endangered, endemic, naturalized, subset. ref_excluded vector listing potential ref_IDs shall ignored assembling set regions checklists fulfilling given criteria. Checklists references returned. NULL default. type_ref Character, options Account, Catalogue, Checklist, Flora, Herbarium collection, Key, Red list, Report, Species Database, Survey. entity_class Character, options Island, Island/Mainland, Mainland, Island Group, Island Part. native_indicated Logical, whether lists native status available retrieved. natural_indicated Logical, whether lists natural status available retrieved. end_ref Logical, whether lists endemism reference level available retrieved. end_list Logical, whether lists endemism list level available retrieved. suit_geo logical indicating whether regions classified suit_geo considered (see details). complete_taxon Logical, default TRUE. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved. list_set list_set NULL default. , list table (see GIFT_lists()). Used internally GIFT_checklists() avoid downloading table lists many times. taxonomy default NULL. , taxonomy table (see GIFT_taxonomy()).","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT checklists meta data — GIFT_checklists_conditional","text":"data frame 16 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT checklists meta data — GIFT_checklists_conditional","text":"column refers : ref_ID - Identification number reference.type - type source .subset - information regarding status species available.native_indicated - Whether native status species available source.natural_indicated - Whether naturalized status species available source.end_ref - Whether endemism information available source.restricted - Whether access reference restricted.taxon_ID - Identification number species.list_ID - Identification number list.end_list - Whether endemism information available list.entity_ID - Identification number polygon list.geo_entity - Name location.suit_geo - polygon suitable.entity_class - Type polygon.entity_type - Name location.taxon_name - Name group taxa available.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_conditional.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT checklists meta data — GIFT_checklists_conditional","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT checklists meta data — GIFT_checklists_conditional","text":"","code":"# \\donttest{ ex <- GIFT_checklists_conditional(taxon_name = \"Embryophyta\",  floristic_scope = c(\"all\", \"native\", \"native and naturalized\", \"native and historically introduced\", \"endangered\", \"endemic\", \"naturalized\", \"other subset\")[7], type_ref = c(\"Account\", \"Catalogue\", \"Checklist\",\"Flora\", \"Herbarium collection\", \"Key\", \"Red list\", \"Report\", \"Species Database\",  \"Survey\"),  entity_class = c(\"Island\", \"Island/Mainland\", \"Mainland\", \"Island Group\",  \"Island Part\"),  native_indicated = FALSE, natural_indicated = FALSE, end_ref = FALSE,  end_list = FALSE, suit_geo = TRUE, complete_taxon = TRUE,  list_set = NULL, taxonomy = NULL) #> You are asking for the latest stable version of GIFT which is 3.2.  # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT checklists — GIFT_checklists_raw","title":"GIFT checklists — GIFT_checklists_raw","text":"Raw checklists, combine functions.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT checklists — GIFT_checklists_raw","text":"","code":"GIFT_checklists_raw(   ref_ID = NULL,   list_ID = NULL,   namesmatched = FALSE,   taxon_name = \"Tracheophyta\",   floristic_group = \"all\",   list_set = NULL,   taxonomy = NULL,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT checklists — GIFT_checklists_raw","text":"ref_ID vector defining IDs references retrieve. NULL default. list_ID vector defining IDs lists retrieve. NULL default. lists retrieved addition lists contained references ref_ID. namesmatched Logical. FALSE default, set TRUE want original species name came references well details taxonomic harmonization. taxon_name Character string corresponding taxonomic group interest. floristic_group Character string among options: , native, naturalized, endemic_list, endemic_ref. list_set NULL default. , list table (see GIFT_lists()). Used internally GIFT_checklists() avoid downloading table lists many times. taxonomy NULL default. , taxonomy table (see GIFT_taxonomy()). Used internally GIFT_checklists() avoid downloading taxonomy table many times.#' GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT checklists — GIFT_checklists_raw","text":"data frame 15 29 columns (depending namesmatched). data frame contains species checklist given reference/list.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT checklists — GIFT_checklists_raw","text":"column refers : ref_ID - Identification number referencelist_ID - Identification number listorig_ID - Identification number species name, unchanged sourcesname_ID - Identification number referencegenus - Genus speciesspecies_epithet - Epithet speciessubtaxon - needed, subtaxon speciesauthor - Name author described speciesmatched - Whether match found using taxonomic backboneepithetscore - Matching score epithetoverallscore - Matching score overall species nameresolved - Whether species name resolvedservice - Service used taxonomic harmonizationwork_ID - Identification number species name, taxonomic  harmonizationgenus_ID - Identification number genus, taxonomic harmonizationspecies - Species name, taxonomic harmonizationquestionable - Whether species occurrence questionablenative - Whether species nativequest_native - Whether native information questionablenaturalized - Whether species naturalizedendemic_ref - Whether species endemic within referencequest_end_ref - Whether endemic_ref information questionableendemic_list- Whether species endemic within listquest_end_list - Whether endemic_list information questionablecons_status - Conservation status species","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_raw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT checklists — GIFT_checklists_raw","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_checklists_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT checklists — GIFT_checklists_raw","text":"","code":"# \\donttest{ ex <- GIFT_checklists_raw(list_ID = c(1,5)) #> You are asking for the latest stable version of GIFT which is 3.2. #> ================================================================================ #>  #> Be cautious, species indicated as endemic were stated like this in the #>   source reference/checklist. It can be that these species appear in other #>   checklists. #> The taxonomic status corresponds to the original taxon names (including #>   subspecies and synonyms) and may not be valid for the taxonomically #>   standardized species names (column 'work_species'). # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","title":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","text":"Retrieve taxonomic trait coverage (given trait) species, native species, naturalized species endemic species per taxonomic group geographic region combination. function works taxonomic groups genus level.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","text":"","code":"GIFT_coverage(   what = \"taxonomic_coverage\",   taxon_name = \"Embryophyta\",   trait_ID = \"1.1.1\",   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","text":"character indicating whether taxonomic_coverage trait_coverage shall retrieved. taxon_name Name taxonomic group want retrieve coverage . See GIFT_taxonomy() options. function accepts family names higher taxonomic groups. trait_ID Identification number trait want retrieve coverage . See GIFT_traits_meta() details. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","text":"data frame either taxonomic trait coverage per GIFT polygon.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","text":"output 9 columns: entity_ID - Identification number GIFT polygonstotal - taxonomic trait coverage speciestotal_rst - taxonomic coverage species considering restricted resourcesnative - taxonomic trait coverage native speciesnative_rst - taxonomic trait coverage native species considering restricted resourcesnaturalized - taxonomic trait coverage naturalized speciesnaturalized_rst - taxonomic trait coverage naturalized species considering restricted resourcesendemic_min - taxonomic trait coverage endemic speciesendemic_min_rst - taxonomic trait coverage endemic species considering restricted resources case taxonomic coverage, '1' means species composition data available given combination taxonomic group geographic region 'NA' means data available. can differ depending whether restricted data GIFT considered (columns without _rst end). case trait coverage, proportion species given taxonomic group information defined trait reported per geographic region.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_coverage.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomic and trait coverage per geographic region and taxonomic group in GIFT — GIFT_coverage","text":"","code":"# \\donttest{ ex <- GIFT_coverage(what = \"taxonomic_coverage\", taxon_name = \"Angiospermae\") #> You are asking for the latest stable version of GIFT which is 3.2. ex2 <- GIFT_coverage(what = \"trait_coverage\", taxon_name = \"Angiospermae\", trait_ID = \"1.2.1\") #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Environmental data for GIFT checklists — GIFT_env","title":"Environmental data for GIFT checklists — GIFT_env","text":"Retrieve environmental data associated GIFT checklists. Sources environmental variables can come raster layers shape files (miscellaneous). Users need define variables interested ask set summary statistics (case raster layers).","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environmental data for GIFT checklists — GIFT_env","text":"","code":"GIFT_env(   entity_ID = NULL,   miscellaneous = if (is.null(rasterlayer)) \"area\" else NULL,   rasterlayer = NULL,   sumstat = \"mean\",   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environmental data for GIFT checklists — GIFT_env","text":"entity_ID vector defining ID lists retrieve. NULL default, case, every list GIFT retrieved. miscellaneous character vector list specifying miscellaneous data retrieve. . list miscellaneous layers precomputed information exists database can viewed output table returned GIFT_env_meta_misc(). rasterlayer character vector list specifying raster data retrieve. list raster layers precomputed information exists database can viewed output table returned GIFT_env_meta_raster(). sumstat Vector list indicating desired summary statistics c(\"min\", \"q05\", \"q10\", \"q20\", \"q25\", \"q30\", \"q40\", \"med\", \"q60\", \"q70\",  \"q75\", \"q80\", \"q90\", \"q95\", \"max\", \"mean\", \"sd\", \"modal\", \"unique_n\", \"H\",  \"n\") used aggregate information coming raster layers. sumstat vector, summary statistics used raster layers. sumstat list, first element defines summary statistics first raster layer, second second . Important note summary statistics may informative depending environmental layer ask . example, relevant retrieve mean soil classes polygon. mode Shannon index suitable case. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environmental data for GIFT checklists — GIFT_env","text":"data frame environmental values per polygon (entity_ID).","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environmental data for GIFT checklists — GIFT_env","text":"columns data.frame following: entity_ID - Identification number polygongeo_entity - Name polygon columns relate environmental variables user asked .","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Environmental data for GIFT checklists — GIFT_env","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environmental data for GIFT checklists — GIFT_env","text":"","code":"# \\donttest{ ex <- GIFT_env(entity_ID = c(1,5),                miscellaneous = c(\"perimeter\", \"biome\"),                rasterlayer = c(\"mn30_grd\", \"wc2.0_bio_30s_01\"),                sumstat = list(c(\"mean\", \"med\"), \"max\")) #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_misc.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"Retrieve metadata miscellaneous environmental layers accessible GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_misc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"","code":"GIFT_env_meta_misc(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_misc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_misc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"data frame 6 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_misc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"column refers : dataset - Name source dataset.variable - Name environmental layer.description- Description.unit - Unit.num - Whether environmental layer numeric .ref_long - Full reference cite using environmental layer.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_misc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_misc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for the environmental miscellaneous variables in GIFT — GIFT_env_meta_misc","text":"","code":"# \\donttest{ ex <- GIFT_env_meta_misc() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"Retrieve metadata every environmental raster accessible GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"","code":"GIFT_env_meta_raster(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"data frame 10 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"column refers : dataset - Name source datasetlayer_name - Name environmental layerlayer - Full namedescription - Descriptionunit - Unitcoord_system - Coordinate systemresolution - Resolutionextent - Extentversion - Version sourceref_long - Full reference cite using environmental layer","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_env_meta_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for the environmental rasters in GIFT — GIFT_env_meta_raster","text":"","code":"# \\donttest{ ex <- GIFT_env_meta_raster() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for checklists available in GIFT — GIFT_lists","title":"Metadata for checklists available in GIFT — GIFT_lists","text":"Retrieves metadata checklist within GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for checklists available in GIFT — GIFT_lists","text":"","code":"GIFT_lists(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for checklists available in GIFT — GIFT_lists","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for checklists available in GIFT — GIFT_lists","text":"data frame 15 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_lists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metadata for checklists available in GIFT — GIFT_lists","text":"column refers : ref_ID - Identification number reference. Columns type subset indicate information can found reference. Similarly, native_indicated, natural_indicated end_ref indicate respectively whether native, naturalized endemic species stated reference. restricted refers availability reference, taxon_ID taxonomic group available reference. list_ID identification number checklist within reference, entity_ID associated polygon. geo_entity associates name identification number. suit_geo indicates whether checklist suitable use, entity_class entity_unit give additional details polygon.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_lists.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for checklists available in GIFT — GIFT_lists","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for checklists available in GIFT — GIFT_lists","text":"","code":"# \\donttest{ ex <- GIFT_lists() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_no_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Select non-overlapping regions — GIFT_no_overlap","title":"Select non-overlapping regions — GIFT_no_overlap","text":"Identify overlapping regions set GIFT regions choose non-overlapping regions based size overlap criteria","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_no_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select non-overlapping regions — GIFT_no_overlap","text":"","code":"GIFT_no_overlap(   entity_IDs = NULL,   area_threshold_island = 0,   area_threshold_mainland = 100,   overlap_threshold = 0.1,   geoentities_overlap = NULL,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_no_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select non-overlapping regions — GIFT_no_overlap","text":"entity_IDs vector IDs regions want check overlap area_threshold_island number stating surface smallest overlapping polygon kept. default set 0 square kilometer (meaning default smallest islands conserved). area_threshold_mainland two polygons overlap, smallest biggest one can kept. surface smallest polygon exceeds number, smallest polygon kept. Otherwise, keep bigger one. Set default 100 square-kilometers. overlap_threshold number ranging 0 1, indicating percentage overlap, partially overlapping polygons kept. geoentities_overlap table coming GIFT indicating overlap km^2 pairs polygons. api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_no_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select non-overlapping regions — GIFT_no_overlap","text":"vector entity_IDs (identification numbers polygons) non-overlapping.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_no_overlap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select non-overlapping regions — GIFT_no_overlap","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_no_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select non-overlapping regions — GIFT_no_overlap","text":"","code":"# \\donttest{ ex <- GIFT_no_overlap(entity_IDs = c(10071, 12078)) # Andalusia and Spain.  #> You are asking for the latest stable version of GIFT which is 3.2. # We get Andalusia because it is smaller than Spain and larger than 100 km² ex2 <- GIFT_no_overlap(entity_IDs = c(10071, 12078),  area_threshold_mainland = 100000) # since Andalusia is smaller than #> You are asking for the latest stable version of GIFT which is 3.2. # 100,000 km² large, the larger entity (Spain) is chosen here. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"Calculate spatial overlap GIFT polygons shapefiles coming resources","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"","code":"GIFT_overlap(   resource = \"glonaf\",   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"resource character string indicating resource spatial overlap calculated. Available options glonaf gmba. glonaf stands Global Naturalized Alien Flora gmba Global Mountain Biodiversity Assessment. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"data frame spatial overlap.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"columns data.frame following: entity_ID - Identification number GIFT polygonglonaf_ID (gmba_ID) - Identification number polygon resourceoverlap12 - Spatial overlap percentage GIFT polygon external polygonoverlap21 - way around","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_overlap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial overlap between GIFT polygons and external polygons — GIFT_overlap","text":"","code":"# \\donttest{ glonaf <- GIFT_overlap(resource = \"glonaf\") #> You are asking for the latest stable version of GIFT which is 3.2. gmba <- GIFT_overlap(resource = \"gmba\") #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_phylogeny.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogeny of the species in GIFT — GIFT_phylogeny","title":"Phylogeny of the species in GIFT — GIFT_phylogeny","text":"Retrieve phylogeny plant species available GIFT. phylogeny table available GIFT_version 1.0, 2.0, 2.1 2.2.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_phylogeny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogeny of the species in GIFT — GIFT_phylogeny","text":"","code":"GIFT_phylogeny(   clade = \"Tracheophyta\",   as_tree = TRUE,   return_work_ID = FALSE,   work_ID_subset = NULL,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_phylogeny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylogeny of the species in GIFT — GIFT_phylogeny","text":"clade Character string indicating taxonomic group interest corresponding node labels phylogeny. as_tree Logical, whether want phylogeny returned phylogenetic tree  (TRUE) table (FALSE). TRUE default. return_work_ID Logical, whether want retrieve species' names identification number (work_ID) GIFT database. FALSE default. work_ID_subset vector work_ID prune phylogenetic tree. NULL default. api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_phylogeny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phylogeny of the species in GIFT — GIFT_phylogeny","text":"data frame 5 columns tree object.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_phylogeny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylogeny of the species in GIFT — GIFT_phylogeny","text":"column refers : taxon_label - Name taxonomic groupwork_ID - Standardized species name IDs species tips treeedge_length - Edge lengthlft - Left border given taxon Newick sequencergt - Right border given taxon Newick sequence","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_phylogeny.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phylogeny of the species in GIFT — GIFT_phylogeny","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_phylogeny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylogeny of the species in GIFT — GIFT_phylogeny","text":"","code":"# \\donttest{ ex <- GIFT_phylogeny(clade = \"Tracheophyta\", as_tree = FALSE) #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for references available in GIFT — GIFT_references","title":"Metadata for references available in GIFT — GIFT_references","text":"Retrieve metadata every reference accessible GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for references available in GIFT — GIFT_references","text":"","code":"GIFT_references(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for references available in GIFT — GIFT_references","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for references available in GIFT — GIFT_references","text":"data frame 14 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_references.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metadata for references available in GIFT — GIFT_references","text":"column refers : ref_ID - Identification number referenceref_long - Full reference referencegeo_entity_ref - Name locationtype - type source issubset - information regarding status species availabletaxon_ID - Identification number group taxa availabletaxon_name - Name group taxa availablechecklist - source checklistnative_indicated - Whether native status species available sourcenatural_indicated - Whether naturalized status species available sourceend_ref - Whether endemism information available sourcetraits - Whether trait information available sourcerestricted - Whether access reference restrictedproc_date - source processed","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_references.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for references available in GIFT — GIFT_references","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_references.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for references available in GIFT — GIFT_references","text":"","code":"# \\donttest{ ex <- GIFT_references() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for GIFT regions — GIFT_regions","title":"Metadata for GIFT regions — GIFT_regions","text":"Retrieves miscellaneous information GIFT regions.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for GIFT regions — GIFT_regions","text":"","code":"GIFT_regions(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for GIFT regions — GIFT_regions","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for GIFT regions — GIFT_regions","text":"data frame 7 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_regions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metadata for GIFT regions — GIFT_regions","text":"detail column: entity_ID - Identification number GIFT polygonsgeo_entity - Name GIFT polygonssuit_geo - Whether polygon suitableentity_class - Class polygonentity_type - Type polygonTDWG_lvl3_ID - Whether polygon TDWG region (see https://www.tdwg.org/)country - Whether polygon country","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_regions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for GIFT regions — GIFT_regions","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for GIFT regions — GIFT_regions","text":"","code":"# \\donttest{ ex <- GIFT_regions() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_richness.html","id":null,"dir":"Reference","previous_headings":"","what":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","title":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","text":"Retrieve species richness species, native species, naturalized species endemic species per taxonomic group geographic region combination.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_richness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","text":"","code":"GIFT_richness(   taxon_name = \"Embryophyta\",   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_richness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","text":"taxon_name Taxonomic group retrieve species richness . GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_richness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","text":"data frame species richness values different floristic subsets per geographic region GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_richness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","text":"output 5 columns: entity_ID - Identification number geographic regiontotal - total species richnessnative - number native speciesnaturalized - number naturalized speciesendemic_min - number endemic species number endemic species conservative count counting occurrences species go back infraspecific taxa.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_richness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_richness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species richness per geographic region and taxonomic group in GIFT — GIFT_richness","text":"","code":"# \\donttest{ ex <- GIFT_richness(taxon_name = \"Angiospermae\") #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape files of GIFT regions — GIFT_shapes","title":"Shape files of GIFT regions — GIFT_shapes","text":"Get shapefile GIFT regions selected regions.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape files of GIFT regions — GIFT_shapes","text":"","code":"GIFT_shapes(   entity_ID = NULL,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shape files of GIFT regions — GIFT_shapes","text":"entity_ID vector defining IDs regions. api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shape files of GIFT regions — GIFT_shapes","text":"spatial data.frame 13 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_shapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shape files of GIFT regions — GIFT_shapes","text":"detail column: entity_ID - Identification number polygongeo_entity - Name polygonpoint_x - Longitude centroid polygonpoint_y - Latitude centroid polygonarea - Area km2 polygonx_min - Minimum longitude polygonx_max - Maximum longitude polygony_min - Minimum latitude polygony_max - Maximum latitude polygonentity_class - Class polygonentity_type - Type entitypolygon_source - Source polygongeometry - Geometry column sf","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_shapes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shape files of GIFT regions — GIFT_shapes","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_shapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape files of GIFT regions — GIFT_shapes","text":"","code":"# \\donttest{ ex <- GIFT_shapes(entity_ID = c(677, 200)) #> You are asking for the latest stable version of GIFT which is 3.2. #> ================================================================================ plot(sf::st_geometry(ex), col = ex$entity_ID)  # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial selection of GIFT checklists — GIFT_spatial","title":"Spatial selection of GIFT checklists — GIFT_spatial","text":"Retrieve checklists overlapping shape file set coordinates.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial selection of GIFT checklists — GIFT_spatial","text":"","code":"GIFT_spatial(   shp = NULL,   coordinates = NULL,   overlap = \"centroid_inside\",   entity_ID = NULL,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial selection of GIFT checklists — GIFT_spatial","text":"shp Shapefile provided user. Coordinate Reference System (CRS) must set WGS84 (EPSG code 4326). coordinates Custom set coordinates. format two columns data.frame, first one longitudes second latitudes vertices polygon. data.frame includes two rows, function assumes values four limits (min max. longitude latitude) bounding box. overlap character string defining criteria use order retrieve checklists. Available options centroid_inside, extent_intersect, shape_intersect shape_inside. example, extent_intersect means every polygon GIFT extent intersects provided shape/coordinates retrieved. entity_ID Constrain list regions received predefined set entity_IDs. E.g. list come GIFT_checklists_conditional(). GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial selection of GIFT checklists — GIFT_spatial","text":"data frame 3 columns: entity_ID identification number polygon, geo_entity_ref name, coverage indicates percentage overlap provided shape different polygons GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_spatial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial selection of GIFT checklists — GIFT_spatial","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial selection of GIFT checklists — GIFT_spatial","text":"","code":"# \\donttest{ # With a shapefile data(\"western_mediterranean\") ex <- GIFT_spatial(shp = western_mediterranean, overlap = \"centroid_inside\") #> You are asking for the latest stable version of GIFT which is 3.2.  # With a shapefile coming from GIFT spain <- GIFT_shapes(entity_ID = 10071) #> You are asking for the latest stable version of GIFT which is 3.2. #> ================================================================================ ex_spain <- GIFT_spatial(shp = spain) #> You are asking for the latest stable version of GIFT which is 3.2.  # With a point  custom_point <- cbind(9.9, 51) ex2 <- GIFT_spatial(coordinates = custom_point, overlap = \"extent_intersect\") #> You are asking for the latest stable version of GIFT which is 3.2.  # With an extent custom_extent <- cbind(c(-13, -18), c(27.5, 29.3)) ex3 <- GIFT_spatial(coordinates = custom_extent, overlap = \"extent_intersect\") #> You are asking for the latest stable version of GIFT which is 3.2. #> 4 coordinates provided: an extent box was drawn, assuming that #>             minimum X and Y are on row 1, and maximum X and Y on row 2.  # With a custom polygon custom_polygon <- cbind(c(-18, -16.9, -13, -13, -18, -18), c(29.3, 33, 29.3, 27.5, 27.5, 29.3)) ex4 <- GIFT_spatial(coordinates = custom_polygon, overlap = \"extent_intersect\") #> You are asking for the latest stable version of GIFT which is 3.2.  #With a linestring custom_linestring <- rbind(c(9.9, 51), c(2.35, 48.9)) custom_linestring <- sf::st_as_sf(as.data.frame(custom_linestring), coords = c(\"V1\", \"V2\")) custom_linestring <- dplyr::summarise(custom_linestring, geometry = sf::st_combine(geometry)) sf::st_crs(custom_linestring) <- sf::st_crs(western_mediterranean) ex5 <- GIFT_spatial(shp = custom_linestring, overlap = \"extent_intersect\") #> You are asking for the latest stable version of GIFT which is 3.2.  # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Species list in GIFT — GIFT_species","title":"Species list in GIFT — GIFT_species","text":"Retrieve whole set plant species available GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species list in GIFT — GIFT_species","text":"","code":"GIFT_species(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species list in GIFT — GIFT_species","text":"api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species list in GIFT — GIFT_species","text":"data frame 5 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species list in GIFT — GIFT_species","text":"column refers : work_ID - Identification number speciesgenus_ID - Identification number genuswork_genus - Genus name taxonomic harmonizationwork_species - Species name taxonomic harmonizationwork_author - Author described species (taxonomic harmonization)","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species list in GIFT — GIFT_species","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species list in GIFT — GIFT_species","text":"","code":"# \\donttest{ ex <- GIFT_species() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"GIFT species distribution — GIFT_species_distribution","title":"GIFT species distribution — GIFT_species_distribution","text":"Retrieve distribution one species GIFT checklists.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GIFT species distribution — GIFT_species_distribution","text":"","code":"GIFT_species_distribution(   genus = \"Fagus\",   epithet = \"sylvatica\",   namesmatched = FALSE,   remove_overlap = FALSE,   area_th_island = 0,   area_th_mainland = 100,   overlap_th = 0.1,   by_ref_ID = FALSE,   aggregation = FALSE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GIFT species distribution — GIFT_species_distribution","text":"genus Character string corresponding genus species interest. epithet Character string corresponding epithet species interest. namesmatched Logical FALSE default, set TRUE want look species standardized species names also original species names came original resources. remove_overlap logical stating whether want retrieve checklists overlap . FALSE default. area_th_island number stating surface smallest overlapping polygon kept. default set 0 square kilometer (meaning default smallest islands conserved). area_th_mainland two polygons overlap, smallest biggest one can kept. surface smallest polygon exceeds number, smallest polygon kept. Otherwise, keep bigger one. Set default 100 square-kilometers. overlap_th number ranging 0 1, indicating percentage overlap, partially overlapping polygons kept. by_ref_ID logical indicating whether removal overlapping regions shall applied ref_ID . Note regions overlapping regions resource removed even references available regions. aggregation logical stating whether want aggregate simpler way floristic status species per entity_ID. example, two lists associated entity_ID describe species native non-native. case, aggregation consider species native. Reverse naturalized alien. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GIFT species distribution — GIFT_species_distribution","text":"data frame 33 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GIFT species distribution — GIFT_species_distribution","text":"detail data.frame columns: ref_ID - Identification number referencelist_ID - Identification number listentity_ID - Identification number polygonname_ID - Identification number genus taxonomic harmonizationcf_genus - Whether genus name uncertaincf_species - Whether species' epithet uncertainaff_species - Species' epithet uncertainquestionable - Whether species name questionablenative - species nativequest_native - native status questionablenaturalized - species naturalizedendemic_ref - species endemic reference levelquest_end_ref - endemic_ref status questionableendemic_list - species endemic list levelquest_end_list - endemic_list status questionablegenus - Genus name taxonomic harmonizationspecies_epithet - Epithet taxonomic harmonizationsubtaxon - Subtaxon name taxonomic harmonizationauthor - Author described species taxonomic harmonizationmatched - species name matched taxonomic backboneepithetscore - Matching score epithetoverallscore - Overall matching score speciesresolved - species name resolved taxonomic backbonesynonym -species synonym taxonomic backbonematched_subtaxon -sub-species name matched taxonomic backboneaccepted - species name accepted taxonomic backboneservice - Service use taxonomic harmonizationwork_ID -Identification number species taxonomic harmonizationtaxon_ID -Identification number taxonomic groupwork_genus - Identification number genus taxonomic harmonizationwork_species_epithet - Identification number species epithet taxonomic harmonizationwork_species - Species name (taxonomic harmonization)work_author - Author described species (taxonomic harmonization)","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_distribution.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GIFT species distribution — GIFT_species_distribution","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GIFT species distribution — GIFT_species_distribution","text":"","code":"# \\donttest{ ex <- GIFT_species_distribution() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Species list in GIFT — GIFT_species_lookup","title":"Species list in GIFT — GIFT_species_lookup","text":"Retrieve name matching information one taxonomic name. results returned, name either found unstandardized taxonomically standardized names.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species list in GIFT — GIFT_species_lookup","text":"","code":"GIFT_species_lookup(   genus = \"\",   epithet = \"\",   namesmatched = FALSE,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species list in GIFT — GIFT_species_lookup","text":"genus character string defining genus name looked . epithet character string defining specific epithet looked . namesmatched Logical FALSE default, set TRUE want look species standardized species names also original species names came original resources. api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species list in GIFT — GIFT_species_lookup","text":"data frame 19 columns (24 namesmatched = TRUE).","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species list in GIFT — GIFT_species_lookup","text":"column refers : orig_ID - Identification number species taxonomic harmonizationorig_genus - Genus taxonomic harmonizationname_ID - Identification number genus taxonomic harmonizationcf_genus- Whether genus name uncertaingenus- Genus taxonomic harmonizationcf_species- Whether species' epithet uncertainaff_species- Species' epithet uncertainspecies_epithet- Epithet species taxonomic harmonizationsubtaxon- Subtaxon species taxonomic harmonizationauthor- Author described species (taxonomic harmonization)matched- species matched taxonomic backboneepithetscore- Matching score epithetoverallscore- Overall matching score speciesresolved- species name resolved taxonomic backbonesynonym- species name synonym taxonomic backbonematched_subtaxon- subtaxon matched taxonomic backboneaccepted- species name accepted taxonomic backboneservice- Service use taxonomic harmonizationwork_ID- Identification number species taxonomic harmonizationtaxon_ID- Identification number taxonomic groupwork_genus- Identification number genus taxonomic harmonizationwork_species_epithet- Identification number species epithet taxonomic harmonizationwork_species - Species name (taxonomic harmonization)work_author-  Author described species (taxonomic harmonization)","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_lookup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species list in GIFT — GIFT_species_lookup","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_species_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species list in GIFT — GIFT_species_lookup","text":"","code":"# \\donttest{ ex <- GIFT_species_lookup(genus = \"Fagus\", epithet = \"sylvatica\") #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxgroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic group of species — GIFT_taxgroup","title":"Taxonomic group of species — GIFT_taxgroup","text":"Assign taxonomic groups various hierarchical level species GIFT (work_ID).","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxgroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic group of species — GIFT_taxgroup","text":"","code":"GIFT_taxgroup(   work_ID = NULL,   taxon_lvl = c(\"family\", \"order\", \"higher_lvl\")[1],   return_ID = FALSE,   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\",   taxonomy = NULL,   species = NULL )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxgroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomic group of species — GIFT_taxgroup","text":"work_ID vector defining IDs species retrieve taxonomic groups . NULL default. taxon_lvl taxonomic level retrieve names . family default. Check GIFT_taxonomy() available levels. addition available levels one can put higher_lvl retrieve higher level groups \"Anthocerotophyta\", \"Marchantiophyta\", \"Bryophyta\", \"Lycopodiophyta\", \"Monilophyta\", \"Gymnospermae\", \"Angiospermae\". return_ID logical indicating whether give back taxon_IDs instead names. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved. taxonomy option supply taxonomy object loaded already avoid double loading. internal use within GIFT functions. NULL (default) taxonomy loaded within function. species option supply species names object loaded already avoid double loading. internal use within GIFT functions. NULL (default) species loaded within function.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxgroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxonomic group of species — GIFT_taxgroup","text":"vector taxonomic group species used input.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxgroup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Taxonomic group of species — GIFT_taxgroup","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxgroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomic group of species — GIFT_taxgroup","text":"","code":"# \\donttest{ ex <- GIFT_taxgroup(work_ID = c(1, 4, 7, 8), taxon_lvl = \"family\") #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomy of GIFT — GIFT_taxonomy","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"Retrieves taxonomy GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"","code":"GIFT_taxonomy(   GIFT_version = \"latest\",   api = \"https://gift.uni-goettingen.de/api/extended/\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used. api character string defining API data retrieved.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"data frame 6 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"column refers : taxon_ID - identification number taxonomic entry.taxon_name - names describing taxa.taxon_name - author name given taxon.taxon_lvl - splits every taxon genus, family, order superior orders. Taxonomy linear sequence left right borders taxon. nested, example left right borders genus fall left right borders corresponding family. lft - left border one taxon taxonomic sequence.rgt - right border one taxon taxonomic sequence.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxonomy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomy of GIFT — GIFT_taxonomy","text":"","code":"# \\donttest{ ex <- GIFT_taxonomy() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Trait values at the species level — GIFT_traits","title":"Trait values at the species level — GIFT_traits","text":"Retrieve specific trait values.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trait values at the species level — GIFT_traits","text":"","code":"GIFT_traits(   trait_IDs = \"\",   agreement = 0.66,   bias_ref = TRUE,   bias_deriv = TRUE,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trait values at the species level — GIFT_traits","text":"trait_IDs character string indicating trait want retrieve. Traits must belong available list traits. agreement Percentage resources agree aggregated trait value, entries threshold omitted. bias_ref FALSE, exclude entries based resource potentially introduces bias (e.g. resource including trees). bias_deriv FALSE, exclude entries based derivation potentially introduces bias (e.g. phanerophytes woody life forms ambiguous). api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trait values at the species level — GIFT_traits","text":"long-format data frame 6 columns: trait_ID, work_ID, species, trait_value, agreement references.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trait values at the species level — GIFT_traits","text":"detail column: trait_ID - Identification number traitwork_ID - Identification number taxonomically harmonized speciesspecies - Species nametrait_value - Value traitagreement - Agreement score different sources trait value, categorical traitscv - Coefficient variation different sources trait value, numeric traitsn - Number sources leading trait valuereferences - ref_ID got trait information","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trait values at the species level — GIFT_traits","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trait values at the species level — GIFT_traits","text":"","code":"# \\donttest{ self_fertilization <- GIFT_traits(trait_IDs = \"3.1.1\", agreement = 0.66, bias_ref = FALSE, bias_deriv = FALSE) #>  #> Retrieving species' names. #> Preparing the download of trait data for 1 trait(s). #> ================================================================================ #>  # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Trait metadata — GIFT_traits_meta","title":"Trait metadata — GIFT_traits_meta","text":"Retrieve metadata functional traits coming GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trait metadata — GIFT_traits_meta","text":"","code":"GIFT_traits_meta(   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trait metadata — GIFT_traits_meta","text":"api Character string corresponding API. GIFT_version character string defining version GIFT database use. function retrieves default --date version.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trait metadata — GIFT_traits_meta","text":"data frame 10 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trait metadata — GIFT_traits_meta","text":"column refers : Lvl1 - First level trait classificationCategory - Name first level classificationLvl2 - Second level trait classificationTrait1 - Name second level classificationLvl3 - Identification number traitTrait2 - Trait nameUnits - Trait unittype - Trait typecomment - Commentcount - many entries traits database","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_meta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trait metadata — GIFT_traits_meta","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trait metadata — GIFT_traits_meta","text":"","code":"# \\donttest{ ex <- GIFT_traits_meta() #> You are asking for the latest stable version of GIFT which is 3.2. # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw trait values — GIFT_traits_raw","title":"Raw trait values — GIFT_traits_raw","text":"Retrieve non-aggregated trait values level bibliographic references un-standardized species names GIFT.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw trait values — GIFT_traits_raw","text":"","code":"GIFT_traits_raw(   trait_IDs = \"\",   derived = TRUE,   bias_ref = TRUE,   bias_deriv = TRUE,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw trait values — GIFT_traits_raw","text":"trait_IDs character string indicating traits want retrieve. Traits must belong available list traits. See GIFT_traits_meta(). derived include logically derived traits. bias_ref FALSE, exclude entries based resource potentially introduces bias (e.g. resource including trees). bias_deriv FALSE, exclude entries based derivation potentially introduces bias (e.g. phanerophytes woody life forms ambiguous). api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw trait values — GIFT_traits_raw","text":"data.frame 28 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raw trait values — GIFT_traits_raw","text":"detail column: trait_derived_ID - Identification number trait record databaseref_ID - Identification number referenceorig_ID - Identification number species, came sourcetrait_ID - Identification number traittrait_value - Value trait (coded character, even continuous trait)derived - trait value derived another information (e.g. phanerophytes woody)bias_deriv - derivation potentially introducing biasbias_ref - resource potentially introducing biasname_ID - Identification number species resolvedcf_genus - Whether genus name uncertaingenus - Genus speciescf_species - Whether species' epithet uncertainaff_species - Species' epithet uncertainspecies_epithet - Epithet speciessubtaxon - Sub-taxon nameauthor - Author described speciesmatched - species name matched taxonomic backboneepithetscore - Matching score epithetoverallscore - Overall matching scoreresolved - species name resolved taxonomic backboneservice - Taxonomic backbone used taxonomic harmonizationwork_ID - Identification number taxonomically harmonized speciesgenus_ID - Identification number taxonomically harmonized genuswork_genus - Genus name (taxonomic harmonization)work_species - Species name (taxonomic harmonization)work_author - Name author described speciesgeo_entity _ref - Name region referenceref_long - Full reference cite","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_raw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Raw trait values — GIFT_traits_raw","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw trait values — GIFT_traits_raw","text":"","code":"# \\donttest{ succulence <- GIFT_traits_raw(trait_IDs = c(\"4.10.1\")) #> ================================================================================ # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_tax.html","id":null,"dir":"Reference","previous_headings":"","what":"Traits at the taxonomic level — GIFT_traits_tax","title":"Traits at the taxonomic level — GIFT_traits_tax","text":"Retrieve specific trait values high taxonomic level.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_tax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traits at the taxonomic level — GIFT_traits_tax","text":"","code":"GIFT_traits_tax(   trait_IDs = \"\",   agreement = 0.66,   bias_ref = TRUE,   bias_deriv = TRUE,   api = \"https://gift.uni-goettingen.de/api/extended/\",   GIFT_version = \"latest\" )"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_tax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Traits at the taxonomic level — GIFT_traits_tax","text":"trait_IDs character string indicating trait want retrieve. Traits must belong available list traits. agreement Percentage resources agree aggregated trait value, entries threshold omitted. bias_ref FALSE, exclude entries based resource potentially introduces bias (e.g. resource including trees). bias_deriv FALSE, exclude entries based derivation potentially introduces bias (e.g. phanerophytes woody life forms ambiguous). api character string defining API data retrieved. GIFT_version character string defining version GIFT database use. function retrieves default latest stable version. set beta, --date version still subject changes edits used.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_tax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Traits at the taxonomic level — GIFT_traits_tax","text":"long-format data frame 7 columns: taxon_ID, taxon_name, trait_value, agreement, references negative.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_tax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Traits at the taxonomic level — GIFT_traits_tax","text":"detail column: taxon_ID - Identification number taxontaxon_name - Name taxonagreement - Agreement score different sources trait value, categorical traitsreferences - Source trait values (ref_ID)negative - record indicate absence trait value taxon_ID one column per trait respective trait values","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_tax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Traits at the taxonomic level — GIFT_traits_tax","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_traits_tax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Traits at the taxonomic level — GIFT_traits_tax","text":"","code":"# \\donttest{ ex <- GIFT_traits_tax(trait_IDs = c(\"1.2.1\", \"1.4.1\"), bias_ref = FALSE, bias_deriv = FALSE) #> You are asking for the latest stable version of GIFT which is 3.2. #>  #> Retrieving species' names. #> Preparing the download of trait data (2 traits asked). #> ================================================================================ #>  #> The following traits were not available at the taxonomic level: 1.2.1  # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Versions of GIFT available — GIFT_versions","title":"Versions of GIFT available — GIFT_versions","text":"Returns table information different versions database","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Versions of GIFT available — GIFT_versions","text":"","code":"GIFT_versions()"},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Versions of GIFT available — GIFT_versions","text":"data frame 4 columns.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_versions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Versions of GIFT available — GIFT_versions","text":"column refers : ID - Identification number versionversion - Version numberdescription - major updates ","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_versions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Versions of GIFT available — GIFT_versions","text":"","code":"Denelle, P., Weigelt, P., & Kreft, H. (2023). GIFT—An R package to  access the Global Inventory of Floras and Traits. Methods in Ecology  and Evolution, 14, 2738-2748.  https://doi.org/10.1111/2041-210X.14213   Weigelt, P, König, C, Kreft, H. GIFT – A Global Inventory of Floras and  Traits for macroecology and biogeography. J Biogeogr. 2020; 47: 16– 43.  https://doi.org/10.1111/jbi.13623"},{"path":[]},{"path":"https://biogeomacro.github.io/GIFT/reference/GIFT_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Versions of GIFT available — GIFT_versions","text":"","code":"# \\donttest{ ex <- GIFT_versions() # }"},{"path":"https://biogeomacro.github.io/GIFT/reference/western_mediterranean.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape file of the western Mediterranean basin — western_mediterranean","title":"Shape file of the western Mediterranean basin — western_mediterranean","text":"Shape file encompassing western part Mediterranean basin. CRS WGS84.","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/western_mediterranean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape file of the western Mediterranean basin — western_mediterranean","text":"","code":"data(\"western_mediterranean\")"},{"path":"https://biogeomacro.github.io/GIFT/reference/western_mediterranean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Shape file of the western Mediterranean basin — western_mediterranean","text":"object class \"sf\"","code":""},{"path":"https://biogeomacro.github.io/GIFT/reference/western_mediterranean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape file of the western Mediterranean basin — western_mediterranean","text":"","code":"data(western_mediterranean)"},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"gift-133","dir":"Changelog","previous_headings":"","what":"GIFT 1.3.3","title":"GIFT 1.3.3","text":"CRAN release: 2024-12-19 Vignettes built CRAN anymore, remain acessible website","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"minor-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GIFT 1.3.3","text":"Anemonoides nemorosa instead Anemone nemorosa vignette Better explanation parameter coordinates functions GIFT_spatial GIFT_checklists Publication records section added Website/Vignettes Section added specific region’s phylogeny Error message fixed GIFT_taxgroup()","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"gift-132","dir":"Changelog","previous_headings":"","what":"GIFT 1.3.2","title":"GIFT 1.3.2","text":"CRAN release: 2024-02-27","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"minor-changes-1-3-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GIFT 1.3.2","text":"Better description entity_ID argument GIFT_spatial Example added GIFT_spatial Main vignette: detail added regarding version GIFT used species distribution, packages edited beginning Function check_query() added check_functions implemented GITT_env_meta_raster() GIFT_env_meta_misc()","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"gift-131","dir":"Changelog","previous_headings":"","what":"GIFT 1.3.1","title":"GIFT 1.3.1","text":"CRAN release: 2024-01-09","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"minor-changes-1-3-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GIFT 1.3.1","text":"Better message GIFT_env missing raster/misc Citation updated functions Readme","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"gift-130","dir":"Changelog","previous_headings":"","what":"GIFT 1.3.0","title":"GIFT 1.3.0","text":"CRAN release: 2023-11-20 Better handling functions Internet GIFT server ","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"minor-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GIFT 1.3.0","text":"Example changed GIFT_phylogeny()","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"gift-120","dir":"Changelog","previous_headings":"","what":"GIFT 1.2.0","title":"GIFT 1.2.0","text":"CRAN release: 2023-08-17 GIFT_version = “latest” now corresponds GIFT 3.0 GIFT_spatial(): provided shapefiles re-projected case missing CRS correspond WGS84 GIFT_phylogeny(): error message GIFT_version < 3.0 vignettes enhanced improved","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"minor-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GIFT 1.2.0","text":"Documentation improved GIFT_coverage(), GIFT_env()","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"gift-110","dir":"Changelog","previous_headings":"","what":"GIFT 1.1.0","title":"GIFT 1.1.0","text":"CRAN release: 2023-06-20 Check internet connection, misspecified APIs GIFT server response function GIFT_traits() fixed. Previously, querying multiple traits different order one used metadata table, number downloads incorrect. vignettes enhanced improved","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"minor-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GIFT 1.1.0","text":"New options GIFT_overlap() Outputs GIFT_lists() GIFT_regions() numeric Edits help functions","code":""},{"path":"https://biogeomacro.github.io/GIFT/news/index.html","id":"gift-100","dir":"Changelog","previous_headings":"","what":"GIFT 1.0.0","title":"GIFT 1.0.0","text":"CRAN release: 2023-03-15 First CRAN release Added NEWS.md file track changes package","code":""}]
